<?php
// 
// $Id: productreport.php,v 1.7 2001/07/20 11:28:54 jakobn Exp $
//
// Created on: <11-Jan-2001 14:47:56 bf>
//
// This source file is part of eZ publish, publishing software.
//
// Copyright (C) 1999-2001 eZ Systems.  All rights reserved.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, US
//


//#####################################################
function view_array($arr, $td=0)
{
   if ($td) {
       echo '<td>';
   }
   echo '<table style="border: 1px dashed black;">';
   foreach ($arr as $key => $elem) {
       echo '<tr>';
       echo '<td>'.$key.'&nbsp;</td>';
       if (is_array($elem)) {
           view_array($elem, 1);
       }
       else {
           echo '<td>'.htmlspecialchars($elem).'&nbsp;</td>';
        }
       echo '</tr>';
   }
   echo '</table>';
   if ($td) {
       echo '</td>';
  }
}

//#####################################################

include_once( "classes/INIFile.php" );
$ini =& INIFile::globalINI();
$Language = $ini->read_var( "eZStatsMain", "Language" );

include_once( "classes/eztemplate.php" );
include_once( "classes/ezdate.php" );

include_once( "ezstats/classes/ezpageview.php" );
include_once( "ezstats/classes/ezpageviewquery.php" );


include_once( "ezrfp/classes/ezrfp.php" );
include_once( "ezuser/classes/ezuser.php" );

//include_once( "eztrade/classes/ezproduct.php" );
//include_once( "eztrade/classes/ezorder.php" );

$t = new eZTemplate( "ezstats/admin/" . $ini->read_var( "eZStatsMain", "AdminTemplateDir" ),
                     "ezstats/admin/intl", $Language, "rfpreport.php" );

$t->setAllStrings();

$t->set_file( array(
    "rfp_report_tpl" => "rfpreport.tpl"
    ) );

$t->set_block( "rfp_report_tpl", "viewed_by_user_tpl", "viewed_by_user" );
$t->set_block( "rfp_report_tpl", "most_viewed_rfp_tpl", "most_viewed_rfp" );

$t->set_block( "rfp_report_tpl", "most_added_to_cart_rfps_tpl", "most_added_to_cart_rfps" );
$t->set_block( "rfp_report_tpl", "most_added_to_wishlist_rfps_tpl", "most_added_to_wishlist_rfps" );
$t->set_block( "rfp_report_tpl", "most_bought_rfps_tpl", "most_bought_rfps" );

$t->set_block( "rfp_report_tpl", "month_tpl", "month" );
$t->set_block( "month_tpl", "month_previous_tpl", "month_previous" );
$t->set_block( "month_tpl", "month_previous_inactive_tpl", "month_previous_inactive" );
$t->set_block( "month_tpl", "month_next_tpl", "month_next" );
$t->set_block( "month_tpl", "month_next_inactive_tpl", "month_next_inactive" );

if ( !is_numeric( $Year ) || !is_numeric( $Month ) )
{
    $cur_date = new eZDate();
    $Year = $cur_date->year();
    $Month = $cur_date->month();
}

$query = new eZPageViewQuery();

$tmpRfp = new eZRfp();
$tmpRfpFile = new eZFile();

// most viewed rfps
$rfpReport =& $query->topRfpRequests( );

//###############################
//viewArray($rfpReport);
// this function converts a URI into an array with the module name and the URI id into 'module' and 'id' respectively
//###############################

function getRfpStatInfo($uri) {
  $uri_arr = explode("/", $uri);
  $info = array();
  $info['module'] = $uri_arr[1];
  $info['id'] = $uri_arr[3];
  return $info;
}

//###############################

$rfpArray = array();
$fullArray = array(); // this is the array in which we will keep the final build
$z = 0; // $z is used to make sure we get consecutive numbers through $fullArray

for ($i=0;$i<sizeof($rfpReport);$i++) {
  $rfpFound = false;
  $UserIDFound = false;
  $rep = $rfpReport[$i]; // put $rfpReport[$i] into $rep for ez coding and readibility
  if (empty($fullArray)) { // if we have not begun to fill $fullArray, don't bother running the nested loop
    $info = getRfpStatInfo($rep['URI']);
    $fullArray[$z]['uri'] = $rep['URI']; //store uri
    $fullArray[$z]['id'] = $info['id']; // store id
    $fullArray[$z]['module'] = $info['module']; // store module
    $fullArray[$z]['stats'] = array();
    $fullArray[$z]['stats'][0]['UserID'] = $rep['UserID'];
    $fullArray[$z]['stats'][0]['count'] = 1;
    $fullArray[$z]['maxcount']++;
    $z++; //get ready for the next entry iee
  } else { // we run the loop checking to see if the URI has been catalouged
    for ($j=0;$j<sizeof($fullArray);$j++) {
      if ($rep['URI'] == $fullArray[$j]['uri']) {
        $rfpFound = true; // now we check to see if the user id is found
        for ($d=0;$d<sizeof($fullArray[$j]['stats']);$d++) { 
          // now we check to see if the user id is found. $d will be for checking stats entries
          if ($fullArray[$j]['stats'][$d]['UserID'] == $rep['UserID']) { //if the id has already been listed...
            $fullArray[$j]['stats'][$d]['count']++; // add one to the count
            $fullArray[$j]['maxcount']++;
            $UserIDFound = true; // toggle the user id found;
          }
            
        }
        if (!$UserIDFound) {// then we will add a new listing to the stats array and start a new UserId and count
          $e = count($fullArray[$j]['stats']); // sets $e as the next stats array listing;
          $fullArray[$j]['stats'][$e] = array();
          $fullArray[$j]['stats'][$e]['UserID'] = $rep['UserID'];
          $fullArray[$j]['stats'][$e]['count'] = 1;
          $fullArray[$j]['maxcount']++;
        }
      }
     }
     if (!$rfpFound) {// then we will add a new uri listing
      $info = getRfpStatInfo($rep['URI']);
      $fullArray[$z]['uri'] = $rep['URI']; //store uri
      $fullArray[$z]['id'] = $info['id']; // store id
      $fullArray[$z]['module'] = $info['module']; // store module
      $fullArray[$z]['stats'] = array();
      $fullArray[$z]['stats'][0]['UserID'] = $rep['UserID'];
      $fullArray[$z]['stats'][0]['count'] = 1;
      $fullArray[$z]['maxcount'] = 1;
      $z++;
      $rfpFound = false;
    }
   }
  }
  
//##############################
//  view_array($fullArray);
// exit();
//##############################


//$rfpArray = array();
//$fullArray = array(); // this is the array in which we will keep the final build
$z = 0; // $z is used to make sure we get consecutive numbers through $fullArray


for ($i=0;$i<sizeof($fullArray);$i++) {


//  $rfpFound = false;
//  $UserIDFound = false;

	print("john murdoc nothing more than perverted killer, $i<br />");

	$statName = 'your suffering will be legendary, even for hell';
	$statMaxCount = 0;
	$statUserCount = 0;
	$statUri = 0;
	$statUser = 0;
	$statUserID = 0;
	$statUserName = 0;

	$t->set_var( "rfp_name", $statsName );
        $t->set_var( "rfp_uri", $statUri );

	
        $t->set_var( "bg_color", $i % 2 == 0 ? "bglight" : "bgdark" );

        $t->set_var( "view_count", ''. $statMaxCount );

	$t->set_var( "item_view_count", 'item->> '. $statMaxCount );

		$t->set_var( "user_view_count", ''. $statUserCount );

        	$t->set_var( "rfp_download_user_name", $statUserName."___[0000000000000000000000000000000000000000000]");

        	$t->set_var( "rfp_downloaded_user_id", $statUserID );

        $t->parse( "viewed_by_user", "viewed_by_user_tpl", true );

  }

//##############################

$next_month = new eZDate( $Year, $Month, 1, 0, 1, 0 );
$prev_month = new eZDate( $Year, $Month, 1, 0, -1, 0 );

$t->set_var( "next_month", $next_month->month() );
$t->set_var( "previous_month", $prev_month->month() );
$t->set_var( "next_year", $next_month->year() );
$t->set_var( "previous_year", $prev_month->year() );

$t->set_var( "month_next_inactive", "" );
$t->set_var( "month_next", "" );
$t->set_var( "month_previous", "" );
$t->set_var( "month_previous_inactive", "" );

$cur_date = new eZDate();

if ( $cur_date->isGreater( $next_month ) )
    $t->parse( "month_next_inactive", "month_next_inactive_tpl" );
else
    $t->parse( "month_next", "month_next_tpl" );

$t->parse( "month_previous", "month_previous_tpl" );

$t->parse( "month", "month_tpl" );

$t->set_var( "this_month", $Month );
$t->set_var( "this_year", $Year );


$t->pparse( "output", "rfp_report_tpl" );
 


?>
