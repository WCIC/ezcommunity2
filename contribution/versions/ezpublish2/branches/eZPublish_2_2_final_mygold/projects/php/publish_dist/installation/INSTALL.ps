%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: INSTALL.dvi
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Courier Times-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o INSTALL.ps INSTALL.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.10.16:1613
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin 0 1 255{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}for Metrics/Metrics currentdict end def[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (INSTALL.dvi)
@start /Fa 133[ 45 1[ 45 1[ 45 1[ 45 45 45 1[ 45 45 45
45 45 2[ 45 45 45 45 45 45 45 1[ 45 9[ 45 6[ 45 1[ 45
4[ 45 2[ 45 11[ 45 1[ 45 3[ 45 2[ 45 45 45 45 45 45 45
1[ 45 45 4[ 45 45 34[{ TeXBase1Encoding ReEncodeFont} 38
74.7198 /Courier rf /Fb 133[ 32 37 1[ 55 37 42 23 32
32 42 42 42 42 60 23 2[ 23 42 42 1[ 37 42 37 42 42 7[ 46
3[ 60 46 3[ 51 60 55 4[ 28 1[ 60 1[ 51 10[ 28 6[ 42 4[ 21
46[{ TeXBase1Encoding ReEncodeFont} 34 83.022 /Times-Italic
rf /Fc 107[ 35 35 22[ 35 1[ 35 35 35 35 35 35 35 35 35
35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 1[ 35
35 35 35 35 4[ 35 35 35 35 35 2[ 35 35 1[ 35 3[ 35 1[ 35
35 35 2[ 35 35 1[ 35 35 35 8[ 35 35 35 1[ 35 35 35 35
35 35 35 35 35 2[ 35 35 35 35 33[{ TeXBase1Encoding ReEncodeFont} 67
58.1154 /Courier rf /Fd 133[ 50 50 1[ 50 50 1[ 50 50
50 50 50 50 50 50 50 50 1[ 50 50 50 1[ 50 50 50 1[ 50
38[ 50 10[ 50 50 46[{ TeXBase1Encoding ReEncodeFont} 24
83.022 /Courier rf /Fe 202[ 29 29 29 29 50[{
TeXBase1Encoding ReEncodeFont} 4 58.1154 /Times-Roman
rf /Ff 134[ 33 33 48 33 33 18 26 22 33 33 33 33 52 18
2[ 18 33 33 22 29 33 29 33 29 6[ 41 5[ 41 1[ 44 9[ 48
6[ 48 6[ 18 2[ 33 3[ 33 33 33 33 18 17 22 3[ 22 22 4[ 33
27 31[ 37 2[{ TeXBase1Encoding ReEncodeFont} 42 66.4176
/Times-Roman rf /Fg 202[ 25 25 25 25 25 49[{
TeXBase1Encoding ReEncodeFont} 5 49.8132 /Times-Roman
rf /Fh 134[ 50 1[ 72 50 55 33 39 44 55 55 50 55 83 28
55 1[ 28 55 50 33 44 55 44 55 50 6[ 66 1[ 72 100 72 2[ 55
72 78 61 78 72 94 66 2[ 39 78 78 61 1[ 72 72 66 72 1[ 50
5[ 50 50 50 50 50 50 50 50 50 50 1[ 25 33 3[ 33 33 40[{
TeXBase1Encoding ReEncodeFont} 58 99.6264 /Times-Bold
rf
%DVIPSBitmapFont: Fi cmsy10 10 1
/Fi 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A> 15
D E
%EndDVIPSBitmapFont
/Fj 206[ 86 49[{ TeXBase1Encoding ReEncodeFont} 1 172.188
/Times-Roman rf /Fk 131[ 40 1[ 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
1[ 40 2[ 40 2[ 40 1[ 40 40 40 40 40 40 1[ 40 40 40 40
40 40 1[ 40 40 40 40 40 40 40 40 40 40 1[ 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 1[ 40 40
40 3[ 40 40 40 40 33[{ TeXBase1Encoding ReEncodeFont} 78
66.4176 /Courier rf /Fl 136[ 86 1[ 66 40 47 53 66 66
60 66 100 33 66 1[ 33 66 60 1[ 53 66 53 66 60 6[ 80 2[ 120
2[ 80 1[ 86 93 73 1[ 86 113 3[ 47 93 4[ 86 1[ 86 1[ 60
5[ 60 60 60 60 60 60 60 60 60 2[ 30 40 42[ 66 2[{
TeXBase1Encoding ReEncodeFont} 45 119.552 /Times-Bold
rf /Fm 139[ 57 1[ 76 1[ 96 7[ 96 2[ 76 3[ 86 29[ 124
15[ 86 86 86 49[{ TeXBase1Encoding ReEncodeFont} 10 172.188
/Times-Bold rf /Fn 105[ 42 1[ 42 42 25[ 42 42 60 42 46
28 32 37 46 46 42 46 69 23 46 1[ 23 46 42 28 37 46 37
46 42 1[ 42 4[ 55 2[ 83 1[ 60 55 46 60 65 51 65 60 78
55 2[ 32 65 1[ 51 55 60 60 55 60 9[ 42 42 42 42 42 42
42 1[ 23 21 28 21 47 1[ 28 28 37[ 46 2[{ TeXBase1Encoding ReEncodeFont}
63 83.022 /Times-Bold rf /Fo 136[ 149 103 115 69 80 92
1[ 115 103 115 172 57 2[ 57 115 103 1[ 92 115 92 115
103 1[ 103 4[ 138 16[ 80 5[ 149 25[ 69 69 40[{
TeXBase1Encoding ReEncodeFont} 25 206.559 /Times-Bold
rf /Fp 105[ 42 1[ 37 37 10[ 28 11[ 17 1[ 37 42 42 60
42 42 23 32 28 42 42 42 42 65 23 42 23 23 42 42 28 37
42 37 42 37 1[ 42 1[ 28 23 28 51 60 60 78 60 60 51 46
55 60 46 60 60 74 51 60 32 28 60 60 46 51 60 55 55 60
76 37 47 47 47 23 23 42 42 42 42 42 42 42 42 42 42 23
21 28 21 47 42 28 28 28 2[ 42 42 34 28 29[ 46 46 2[{
TeXBase1Encoding ReEncodeFont} 93 83.022 /Times-Roman
rf /Fq 139[ 28 1[ 33 2[ 50 6[ 50 2[ 44 1[ 44 50 18[ 72
24[ 50 3[ 50 50 50 48[{ TeXBase1Encoding ReEncodeFont} 12
99.6264 /Times-Roman rf /Fr 138[ 72 40 56 2[ 72 72 72
1[ 40 2[ 40 72 2[ 64 72 1[ 72 64 6[ 88 16[ 48 1[ 104
20[ 72 3[ 36 46[{ TeXBase1Encoding ReEncodeFont} 18 143.462
/Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop Fr 966 2097 a(eZ) 35 b(publish) g(2.2) g(Installa) n(tion) g
(Guide) 591 2998 y
 currentpoint currentpoint translate 1.06113 1.06113 scale neg exch
neg exch translate
 591 2998 a @beginspecial 0 @llx 0
@lly 299 @urx 59 @ury 2990 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezpublish.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezpublish.eps)
%%CreationDate: (Thu Jan 25 18:40:57 2001)
%%BoundingBox: 0 0 299 59
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 300 60
userdict begin
%%BeginData:
DisplayImage
0 0
300 60
12.000000
300 60
1
0
0
16
000000
ffffff
f08c00
8a8a8a
464646
bbbbbb
111111
efefef
a0a0a0
666666
313131
767676
212121
dfdfdf
cfcfcf
ffffff
0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b0f0700260ffc0f0700260ffc
0f0700260ffc0f070002012000020ffc0f070002012000020f930400000203000f170400
000203000f2b0400000203000f150f070002012000020f300500031705000f4804000002
03000f170400000203000f07030308000f1e0400000203000f150f070002012000020f30
0300001703000f480400000203000f170400000203000f07000304000f1e040000020300
0f150f070002012000020f300300001703000f480400000203000f170400000203000f07
000304000f1e0400000203000f150f070002012000020f300300001703000f4804000002
03000f170400000203000f07000304000f1e0400000203000f150f070002012000020f30
050003120600000303000f480400000203000f170400000203000f07000304000f1e0400
000203000f150f070002012000020f430800000309000f490400000203000f1704000002
03000f2b0400000203000f150f070002012000020f42050000030a0007000f4904000002
03000f170400000203000f2b0400000203000f150f070002012000020f410d0006000002
06000d000f4a0400000203000f170400000203000f2b0400000203000f150f0700020120
00020f1c0d0008000b00040303000e000f1a07000a0000030e000f1b0800030004020b00
080007000f270400000203000f030800030004020b00080007000f0b0400000203000f17
0e00030009000403030008000d000f090400000203000f030e0003000402090008000700
0f090f070002012000020f1a0500040000080c0008000f180400000308000f1304000002
03000f0108000c000006060003000f09000305000f0a0300000204000f07040000020300
0f0108000c000006060003000f0a0400000203000f070400000203000f0808000c000009
0a0003000d000f060400000203000f0108000a00000703000f080f070002010b001d0f13
0b00000c040007000f150300000309000f140400000203000e000a00000a09000f080003
05000f0a0300000204000f070400000203000e000a00000a09000f090400000203000f07
0400000203000f0607000400000e0f060400000203000d000400000a09000f070f070002
010b001d0f1107000a000004060004020004060004000f140800000304000f1504000002
0a00000d0b000f07000305000f0a0300000204000f07040000020a00000d0b000f080400
000203000f070400000203000f0507000a0000040600040200060f060400000204000600
000c03000f060f070002010b001d0f110400000309000e000f0408000a00000303000f12
0e00060000020a0007000f15040000060c000b000800050103000c00000405000f060003
05000f0a0300000204000f07040000060c000b000800050103000a00000405000f070400
000203000f070400000203000f050b00000309000d000f040e000b000c0000020f060400
00060c000b000800050103000c000003060007000f050f070002010b0002021700020f10
0300000308000f07070004000002060007000f1007000c00000206000e000f1604000004
040005000f060300000304000f06000305000f0a0300000204000f070400000404000500
0f060300000304000f070400000203000f070400000203000f040700000308000f090800
0c0000000f06040000040c0008000f060900000308000f050f070002010b000202170002
0f0f07000600000208000f0907000600000203000f100a00000308000f17040000020600
03000f090b0000030e000f05000305000f0a0300000204000f0704000002060003000f09
0b0000030e000f060400000203000f070400000203000f04080000020c000f0c0b000f06
040000030b0007000f0707000600000204000f050f070002010b0002021700020f0f0300
000204000f0b0b00000204000f0f0900000303000f180400000203000f0a070006000002
0b000f05000305000f0a0300000204000f070400000203000f0a0700060000020b000f06
0400000203000f070400000203000f040300000204000f14040000020b000f0a09000002
0a000f050f070002010b0002021700020f0f0a00000208000f0b050000030f0e08000003
09000f190400000203000f0b0900000204000f05000305000f0a0300000204000f070400
000203000f0b0900000204000f060400000203000f070400000203000f04030000020600
0f140400000203000f0a030000030f050f070002010b0002021700020f0e070000020600
0f0d00030d000f0c050000030a000f1a0400000203000f0b080000030f05000305000f0a
0300000204000f070400000203000f0b080000030f060400000203000f07040000020300
0f040800000309000f130400000203000f0a050000030f050f070002010b000202170002
0f0e050000020a00050d000305000f0b0d0006000002060007000f1a0400000203000f0b
0500000307000f04000305000f0a0300000204000f070400000203000f0b050000030700
0f050400000203000f070400000203000f040700060000030c0003000d000f1004000002
03000f0a050000030f050f070002010b0002021700020f0e0300001505000f0a07000a00
000206000e000f1b0400000203000f0c000305000f04000305000f0a0300000204000f07
0400000203000f0c000305000f050400000203000f070400000203000f05030000060600
0400030008000d000f0b0400000203000f0a050000030f050f070002010b000202170002
0f0e0300001505000f0a0400000308000f1c0400000203000f0c000305000f0400030500
0f0a0300000204000f070400000203000f0c000305000f050400000203000f0704000002
03000f060900000a0c000b000d000f080400000203000f0a050000030f050f070002010b
0002021700020f0e0300001505000f09030000030b000f1d0400000203000f0c00030500
0f04000305000f0a0300000204000f070400000203000f0c000305000f05040000020300
0f070400000203000f0708000c00000b03000f070400000203000f0a050000030f050f07
0002010b0002021700020f0e0300000204000f1b0800000304000f1e0400000203000f0c
000305000f04000305000f0a0300000204000f070400000203000f0c000305000f050400
000203000f070400000203000f09080009000a00000909000f060400000203000f0a0500
00030f050f070002010b0002021700020f0e030000020a000f1a0e00060000020a000700
0f1e0400000203000f0b0d0000030d000f04000305000f0a0300000204000f0704000002
03000f0b070000030d000f050400000203000f070400000203000f0c0700050003000900
0c00000505000f050400000203000f0a050000030f050f070002010b0002021700020f0e
050000030f1907000c00000206000d000f1f0400000203000f0b050000030f0500030500
0f0a0300000204000f070400000203000f0b050000030f060400000203000f0704000002
03000f110e000400000304000f050400000203000f0a050000030f050f070002010b0002
021700020f0e0700000308000f180a00000305000f200400000203000f0b0b0000020400
0f05000305000f0a0300000204000f070400000203000f0b030000020a000f0604000002
03000f070400000203000f130400000206000f050400000203000f0a050000030f050f07
0002010b0002021700020f0f0a00000204000f170900000308000f210400000203000f0b
0c00000203000f05000303000f0a0300000204000f070400000203000f0b0a0000020b00
0f060400000203000f070400000203000f13050000030f050400000203000f0a05000003
0f050f070002010b0002021700020f0f0300000308000f0e0d000f050800000309000f22
0400000203000f0a080000030d000f050a00000209000f0a0b00000204000f0704000002
03000f0a0e0000030d000f060400000203000f070400000203000f040d000f0d05000003
0f050400000203000f0a050000030f050f070002010b0002021700020f0f070006000002
060005000f0b0700030004000f040500000304000f230400000203000f090e0006000002
09000f0604000002060007000f0707000b00000304000f070400000203000f0907000a00
000204000f070400000203000f070400000203000f04030004000d000f0b030000020400
0f050400000203000f0a050000030f050f070002010b0002021700020f10080000040300
07000f070d000b000600000004000f030d00060000020c0007000f230400000204000500
0f0708000600000206000d000f060800000309000f0608000c00000404000f0704000002
040007000f0707000a00000305000f070400000203000f070400000203000f0403000001
09000d000f080e000600000208000f050400000203000f0a050000030f050f070002010b
0002021700020f1109000004060004000300050208000b000a00000304000f0305000019
0f0f040000040c000b000800050203000a00000408000f070700060000030c0003000501
08000b000c00000604000f07040000030600090008000e000f0205000b00060000030b00
0f080400000203000f070400000203000f04030000030a000300050007000f0107000500
090000030a000f060400000203000f0a050000030f050f070011021700020f1209000010
04000f03050000190f0f0400001008000f090300000c06000400000204000f0704000010
09000f090400000203000f070400000203000f040300000f06000e000f06040000020300
0f0a050000030f050f070011021700020f1308000c00000d0c0003000f03050000190f0f
040000020600000a060008000f0b0900000a040007000300000204000f070400000f0900
0f0a0400000203000f070400000203000f0405000c00000d04000d000f07040000020300
0f0a050000030f050f070011021700020f1508000a0000080c000b000e000f0505000019
0f0f04000002030005000400000606000b0007000f0d0300060000060c0008000f010300
000204000f070400000208010c0000070c0008000f0b0400000203000f07040000020300
0f0605000b000c000008090008000f090400000203000f0a050000030f050f1600020217
00020f1805000800030305000d000f330400000203000f020500030305000f1107000800
0900040203000e000f170e0003000900040203000e000f290d000500030405000f270f16
0002021700020f540400000203000f9c0f160002021700020f540400000203000f9c0f16
001d0f540400000203000f9c0f16001d0f540400000203000f9c0f16001d0f5404000002
03000f9c0f890400000203000f9c0f890400000203000f9c0f890400000203000f9c0f89
0e0005020d000f9c0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 299 59
%%EOF

%%EndDocument
@endspecial 591 2998 a
 currentpoint currentpoint translate 1 1.06113 div 1 1.06113 div scale
neg exch neg exch translate
 591 2998 a Fq 1539 3264 a(16th) 24
b(October) h(2001) p 90 rotate dyy eop
%%Page: 1 2
1 1 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v 150
370 a
 currentpoint currentpoint translate 0.36922 0.36922 scale neg exch
neg exch translate
 150 370 a @beginspecial 0 @llx 0 @lly 169 @urx
39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 370 a
 currentpoint currentpoint translate 1 0.36922 div 1 0.36922 div scale
neg exch neg exch translate
 150 370 a Fp 538 w(The) 16 b(doub) n(le) i
(squares) f(and) f(eZ) i(are) f(tradem) n(arks) g(belong) n(ing) g(to) g
(eZ) g(systems) h(of) f(Norw) o(ay) -7 b(,) 18 b(re) o(gistratio) n(n)
150 469 y(numb) n(er) i(NO) h(981) e(601) h(564) f(\(http://www) -5
b(.) n(brre) o(g) n(.no/o) n(ppslag/enh) n(et/detalj.ssc?or) o(g) n
(nr=9) n(8160) n(1564) n(\).) 150 594 y(All) 21 b(images) f(and) f(te) o
(xt) h(herein) g(is) h(Cop) o(yrig) n(ht) g(200) n(1) f(eZ) h(systems.)
150 718 y(eZ) j(publish) g(is) h(a) g(softw) o(are) f(pack) n(age) g
(released) g(under) f(the) h(GPL) h(lisence) f(\(http://www) -5
b(.g) n(nu.o) n(r) o(g/cop) m(yleft/gpl.) n(html\),) 150
818 y(its) 21 b(primary) e(poin) n(t) i(of) f(distrib) n(ution) f(and) h
(infor) n(mation) g(is) h(http://de) l(v) o(eloper) -7
b(.ez.no/) p 150 5723 3525 4 v 1892 5823 a(1) p 90 rotate
dyy eop
%%Page: 2 3
2 2 bop Fo 150 1021 a(Contents) p Fn 150 1560 a(1) 83
b(Intr) o(oduct) n(ion) 2908 b(4) p Fp 275 1684 a(1.1) 85
b(Pre-Con\002gu) n(red) 20 b(Hosting) 30 b(.) 41 b(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 141 b(4) 275 1808 y(1.2) 85 b(Pre-Con\002gu) n(red) 20
b(Hardw) o(are) 28 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(4) p Fn 150 2016 a(2) 83 b(Installing) 20 b(eZ) h(publish) h
(\(standard) e(method\)) 1941 b(5) p Fp 275 2140 a(2.1) 85
b(Prerequisites) 23 b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 141 b(5) 465 2264 y(2.1.1) 98
b(Needed) 19 b(Pri) n(vile) o(ges) 81 b(.) 41 b(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(5) 465 2388 y(2.1.2) 98 b(Needed) 19 b(Softw) o(are) 49
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(6) 465 2512
y(2.1.3) 98 b(Which) 20 b(Softw) o(are) g(is) h(Already) e(Installed?)
58 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(7) 731 2636 y(2.1.3) n(.1) 112 b(Systems) 20 b(Using) g(RPM) 27
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 141 b(7) 465 2760 y(2.1.4) 98 b(FreeBSD) 65 b(.) 41
b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(7) 465 2884 y(2.1.5) 98 b(Mandr) n(ak) o(e) 38 b(.) j(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(7) 465 3008 y(2.1.6) 98
b(IRIX) 78 b(.) 41 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) 141 b(7) 465 3132 y(2.1.7) 98 b(RA) -5 b(Q) 22
b(3) 77 b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(8) 465 3256 y(2.1.8) 98 b(W) m(indo) n(ws) 60 b(.) 41
b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(8) 465 3380 y(2.1.9) 98 b(Other) 20 b(Systems) 74 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 465 3504 y(2.1.10) 56
b(Installation) 20 b(of) f(Required) h(Softw) o(are) 73
b(.) 41 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(8) 465 3628 y(2.1.11) 56 b(Impo) n(rtant) 20 b(Notice) 53
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 275 3752
y(2.2) 85 b(Compile) 20 b(Con\002gur) n(ation) 58 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 465 3876 y(2.2.1) 98
b(PHP) 35 b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 141 b(8) 731 4000 y(2.2.1) n(.1) 112 b(Unpa) n(cking) 41
b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 141 b(9) 731 4124 y(2.2.1) n(.2) 112
b(Con\002gu) n(ration) 69 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(9) 731
4248 y(2.2.1) n(.3) 112 b(Compilatio) n(n) 54 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 100 b(10) 731 4372 y(2.2.1) n(.4) 112 b(Installation) 31
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) 100 b(10) 731 4496 y(2.2.1) n(.5) 112
b(Compilin) n(g) 21 b(the) f(php) f(modu) n(le) i(on) f(RedHat) g(7.x,)
f(step) i(by) f(step) 72 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(10) 275 4620 y(2.3) 85 b(Apache) 20 b(Con\002gu) n(ration) 27
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(11) 465 4745 y(2.3.1) e(Dual) 20 b(V) -5 b(irtual) 20
b(Host) 33 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(11) 731 4869 y(2.3.1) n(.1) 112 b(Con\002gu) n(ring) 20
b(Thro) n(ugh) f(httpd.co) n(nf) k(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(11) 731 4993 y(2.3.1) n(.2) 112 b(Con\002gu) n(ring) 20
b(php) n(.ini) 63 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(13) 731 5117 y(2.3.1) n(.3) 112
b(Con\002gu) n(ring) 20 b(Thro) n(ugh) f(.htaccess) 65
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(13) 275
5241 y(2.4) 85 b(eZ) 21 b(pub) n(lish) g(Installation) 78
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(13) 465
5365 y(2.4.1) e(Progra) n(m) 21 b(Files) 30 b(.) 42 b(.) f(.) g(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(13) 465 5489 y(2.4.2) e(Database) 69
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(14) 731 5613 y(2.4.2) n(.1) 112 b(First) 21 b(time) f(installation) g
(\(MySQL) n(\)) 33 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(14) 1892 5823 y(2) p 90 rotate dyy eop
%%Page: 3 4
3 3 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 731
333 a(2.4.2) n(.2) 112 b(PostgreSQL) 19 b(con\002gu) n(ration) 34
b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(15) 731 457 y(2.4.2) n(.3) 112 b(PostgreSQL) 19 b(setup) 53
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) 100 b(15) 731 582 y(2.4.2) n(.4) 112 b(First) 21
b(time) f(installation) g(\(Postgre) n(SQL\)) k(.) 41
b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 100 b(15) 731 706 y(2.4.2) n(.5) 112
b(Upda) n(ting) 20 b(the) h(Installation) 77 b(.) 42
b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(15) 275 831 y(2.5) 85 b(No) n(w) 21 b(What?) 55 b(.) 41
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(16) 465 955 y(2.5.1) e(Post) 21 b(Install) f(Checklist) 41
b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 100 b(16) 275 1080 y(2.6) 85
b(T) m(roub) n(leshooting) 29 b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 100 b(16) 465 1204 y(2.6.1) e(Problems) 20
b(Durin) n(g) h(Installation) 30 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(16) 731
1329 y(2.6.1) n(.1) 112 b(FreeBSD) 20 b(4.2) g(and) f(libxml2) 50
b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(16) 731 1453 y(2.6.1) n(.2) 112 b(Missing) 20 b(Compiler/Can) f(not) h
(Compile) g(\(C++/C\)) 31 b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(17) 731 1578
y(2.6.1) n(.3) 112 b(I) 20 b(am) g(getting) g(linkin) n(g) h(erro) n
(rs) g(when) f(tryin) n(g) h(to) f(b) n(uild) g(PHP) 37
b(.) k(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(17) 465 1703 y(2.6.2) e(Problems) 20 b(After) f(Installation) 29
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 100 b(17) 731 1827 y(2.6.2) n(.1) 112 b(Permission) 19
b(Denied) 25 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(17) 731 1952 y(2.6.2) n(.2) 112
b(Can) 20 b(not) g(see) h(Imag) n(es) 71 b(.) 41 b(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(17) 731
2076 y(2.6.2) n(.3) 112 b(W) -7 b(arning) 19 b(about) g(T) -6
b(emp) 20 b(Directory) 53 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(17) 731 2201 y(2.6.2) n(.4) 112 b(After) 19 b(installing) h(my) g(ne)
n(w) g(php) f(module,) g(apache) g(dies) i(immed) n(iately) -5
b(.) 68 b(.) 41 b(.) g(.) h(.) f(.) 100 b(17) 275 2325
y(2.7) 85 b(Installing) 20 b(on) g(RA) -5 b(Q) 21 b(3) 30
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(17) 465 2450 y(2.7.1) e(Getting) 20 b(SSL) h(to) f(W) -7
b(ork) 45 b(.) d(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(21) 275 2574
y(2.8) 85 b(Installing) 20 b(on) g(W) m(indo) l(ws) 76
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(22) 275
2699 y(2.9) 85 b(Mandrak) m(e) 55 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(22) 465
2823 y(2.9.1) e(Do) n(wnloa) n(d) 21 b(the) f(F) o(ollo) n(win) n(g) 47
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(22) p Fn 150 3031 a(3) 83 b(Installing) 20
b(eZ) h(publish) h(without) e(virtual) f(hosts) i(and) g(mod_r) o(e) n
(write) 1199 b(23) p Fp 275 3155 a(3.1) 85 b(Prerequisites) 23
b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(23) 275 3280 y(3.2) 85 b(eZ) 21 b(pub) n(lish) g
(installation) f(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(24) 465 3404 y(3.2.1) e(Installing) 20 b(in) g(one) g(directo) n(ry) g
(\(Recomm) n(ended) f(install\)) k(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(24) 731 3529 y(3.2.1) n(.1) 112 b(Installing) 19 b(the) h(\002les) h
(for) f(eZ) g(publish) 67 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(24) 731 3654 y(3.2.1) n(.2) 112 b(Database) 20 b(installation) j(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(24) 731 3778 y(3.2.1) n(.3) 112 b(Finishing) 19 b(the) h(install) 59
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(24) 465 3903 y(3.2.2) e(Installing) 20 b(with) g(shell) h
(access) f(on) g(serv) o(er) f(and) h(tw) o(o) h(separate) e(director) n
(ies) i(for) f(eZ) g(publish) 80 b(.) 100 b(24) p 150
5723 V 1892 5823 a(3) p 90 rotate dyy eop
%%Page: 4 5
4 4 bop Fm 150 980 a(Chapter) 44 b(1) p Fo 150 1420 a(Intr) l(oduction)
p Fn 358 1877 a(\223He) 21 b(who) i(asks) f(is) i(a) e(f) n(oo) n(l) h
(f) n(or) f(\002) o(v) o(e) g(minutes,) i(b) n(ut) f(he) f(who) h(does)
f(not) g(ask) h(r) o(emains) f(a) g(f) n(ool) g(f) n(or) o(e) m(v) o
(er) -8 b(.) h(\224) p Fp 358 1976 a(-) 41 b(Chinese) 20
b(pro) o(v) m(erb) 150 2184 y(eZ) i(pub) n(lish) g(is) h(a) f(conten) n
(t) g(managem) n(ent) g(system,) g(amon) n(g) g(a) g(lot) f(of) h
(other) e(things.) 29 b(This) 22 b(installation) f(manu) n(al) h(will) h
(try) 150 2284 y(to) d(co) o(v) o(er) f(the) h(job) g(of) g(installing)
g(eZ) g(publish) f(on) h(your) f(serv) o(er) -5 b(.) 150
2408 y(Since) 18 b(v) o(ersio) n(n) g(2.2) f(eZ) h(publish) f(has) h(a)
g(ne) n(w) f(possible) h(w) o(ay) g(to) f(be) h(installed:) 24
b(without) 17 b(virtual) g(hosts) h(and) f(mod_) n(re) n(write.) 150
2508 y(This) k(mak) o(es) g(it) h(possible) f(for) f(people,) g(who) h
(don) n(') o(t) g(ha) n(v) o(e) g(a) g(dedicated) f(serv) o(er) g(or) h
(a) g(specialized) g(eZ) g(publish) f(hoster) m(,) g(to) 150
2607 y(install) 26 b(eZ) f(publish) g(on) g(their) g(accou) n(nts) h
(as) g(long) e(as) j(the) o(y) d(ha) n(v) o(e) h(PHP) h(and) f(a) g
(suppor) n(ted) h(databa) n(se) g(\(e.g.) 40 b(mySQL) 25
b(or) 150 2707 y(PostgreSQL\).) 150 2832 y(This) 20 b(opens) g(some) g
(ne) n(w) g(option) n(s) h(for) f(installing:) 150 2956
y(If) e(you) f(ha) n(v) o(e) h(an) g(accou) n(nt) h(at) f(a) h(webho) n
(ster) g(with) f(PHP) h(and) e(mySQL,) h(you) n(r) h(optio) n(n) g
(shou) n(ld) g(be) f(chap) n(ter) h(3,) f(because) f(you) 150
3056 y(w) o(on') o(t) i(be) h(able) g(to) h(install) f(eZ) h(pub) n
(lish) g(as) g(it') -5 b(s) 21 b(e) o(xplain) n(ed) f(in) h(chapter) e
(2.) 150 3180 y(If) i(you) f(ha) n(v) o(e) h(a) g(dedicated) f(serv) o
(er) h(with) g(Apache) f(and) h(mySQL) g(alread) n(y) h(run) n(ning) f
(and) f(you) g(don') o(t) g(w) o(ant) h(to) h(mess) f(with) 150
3280 y(the) f(Apache) g(con) n(\002guration) n(,) h(then) e(chapter) h
(3) g(might) f(be) h(of) g(interest) h(of) e(you.) 150
3404 y(If) h(you) e(ha) n(v) o(e) i(a) g(dedicate) n(d) g(serv) o(er) f
(and) g(w) o(ant) h(some) g(help) f(on) g(ho) n(w) h(to) g(install) g
(all) g(needed) f(softw) o(are) g(and) g(eZ) h(publish) f(on) 150
3504 y(it,) i(then) e(chapter) g(2) i(is) g(for) e(you.) p
Fl 150 3809 a(1.1) 119 b(Pr) n(e-Con\002gur) n(ed) 32
b(Hosting) p Fp 150 4020 a(It) 21 b(is) g(possible) f(to) h(get) f
(pre-co) n(n\002gure) n(d) h(hosting) e(services) i(where) f(you) f
(can) h(install) h(and) f(manage) f(your) h(eZ) g(publish) g(site) 150
4119 y(with) g(ease.) 26 b(Read) 20 b(more) f(about) h(our) f(hosting) g
(partner) n(s) j(at) e(eZ) h(systems) f(web) g(site) h(\() p
Fk(http://) p Fp(ez.) n(no/shop) n(/hosting\).) p Fl
150 4424 a(1.2) 119 b(Pr) n(e-Con\002gur) n(ed) 32 b(Hard) n(war) n(e) p
Fp 150 4635 a(It) f(is) h(possible) f(to) g(orde) n(r) h(pre-) n
(con\002gu) n(red) f(hard) n(w) o(are) g(from) f(eZ) h(systems.) 58
b(Y) -9 b(ou) 30 b(can) h(order) f(throu) n(gh) h(or) f(web) h(shop) 150
4734 y(\() p Fk(http://) p Fp(sh) n(op.ez.n) n(o\).) 150
4859 y(A) 21 b(line) f(starting) g(with) g(a) h(hash-sig) n(n) g
(\223#\224) f(are) g(inpu) n(t) h(from) e(the) i(user) f(to) g(the) g
(shell.) 1892 5823 y(4) p 90 rotate dyy eop
%%Page: 5 6
5 5 bop Fm 150 980 a(Chapter) 44 b(2) p Fo 150 1420 a(Installi) r(ng) 52
b(eZ) f(publish) h(\(standard) p Fj 2888 1345 a(1) p
Fo 150 1669 a(method\)) p Fp 150 2126 a(This) 27 b(chap) n(ter) g(is) h
(mainly) d(intended) g(for) h(installation) h(on) f(a) h(Red) g(Hat) g
(Linu) n(x) g(system,) h(b) n(ut) f(a) g(lot) f(of) h(frien) n(dly) g
(peop) n(le) 150 2226 y(ha) n(v) o(e) 20 b(con) n(trib) n(uted) g
(infor) n(mation) g(for) f(installation) h(on) g(other) f(operatin) n
(g) i(systems,) f(tak) o(e) g(a) h(look) e(at) i(chapter) e(2) h(and) g
(learn) 150 2325 y(which) g(systems) g(those) g(are.) 150
2450 y(Most) 27 b(of) g(what) g(is) g(described) f(here) g(re) o(gar) n
(ding) g(Red) h(Hat) h(installation) e(can) h(also) g(be) g(applied) f
(to) h(other) f(installations,) 150 2549 y(especially) k(if) g(your) f
(system) h(uses) h(RPM) g(for) f(installation.) 54 b(F) o(or) 30
b(other) f(systems) i(you) e(w) o(ould) g(need) h(to) g(do) g(a) g(lot)
h(of) 150 2649 y(comp) n(iling) 20 b(yourself) f(to) i(mak) o(e) e
(this) i(w) o(ork,) e(or) h(apply) g(the) g(system') -5
b(s) 21 b(o) n(wn) e(packag) n(e) i(manag) n(er) -5 b(.) 150
2773 y(Finding) 24 b(packag) n(es) i(can) f(be) g(don) n(e) h(dirctly) e
(from) g(v) o(endo) n(r) h(sites,) j(thou) n(gh) d(you) f(might) h(not)
f(be) h(guaran) n(teed) g(that) g(you') o(ll) 150 2873
y(\002nd) d(the) h(packag) n(e) g(you) f(need.) 31 b(In) 23
b(such) f(instances) h(you) e(need) h(to) h(do) n(wn) n(load) f(the) h
(source) f(directly) g(from) f(the) i(softw) o(are) 150
2973 y(de) n(v) o(e) n(loper) -5 b(.) 150 3097 y(Dif) n(feren) n(t) 21
b(distrib) n(ution) e(sites) i(for) f(dif) n(fer) n(ent) g(Unix) g
(systems) h(are:) p Fi 275 3284 a(\017) p Fp 41 w(Debian) p
Fk 19 w(\(http://www) n(.debian.org/d) n(istrib/ftplist) n(\)) p
Fi 275 3450 a(\017) p Fp 41 w(Mand) n(rak) o(e,) f(see) h(chap) n(ter) g
(2.9) n(.) p Fi 275 3595 a(\017) p Fp 41 w(IRIX) p Fk
20 w(\(http://fr) n(eeware.sgi.co) n(m/\)) p Fi 275 3761
a(\017) p Fp 41 w(Red) f(Hat) h(Linux) p Fk 19 w(\(http://w) n
(ww.redhat.com/) n(apps/download) p Fp -2 w(\)) p Fi
275 3907 a(\017) p Fp 41 w(SuSE) f(Linux) f(\() p Fk(http://w) n
(ww.suse.com/u) n(s/support/down) n(load/index.ht) n(ml\)) p
Fi 275 4052 a(\017) p Fp 41 w(Sun) p Fk 19 w(\(http://www.su) n
(nfreeware.com) n(/\)) p Fp 150 4260 a(The) h(addr) n(esses) i(to) e
(the) g(softw) o(are) g(de) n(v) o(e) n(lopers) g(will) h(be) f(gi) n
(v) o(en) f(where) h(appr) n(opriated) f(in) h(the) h(te) o(xt.) 150
4384 y(Y) -9 b(ou) 27 b(can) h(also) g(try) f("The) g(Written) h(W) -7
b(ord") 28 b(\() p Fk(ftp:/) n(/ftp.thewritte) n(nword.com/pac) n
(kages/free/by) n(-name/gcc-) 150 4484 y(2.95.2/) p Fp(\)) j(for) h
(binaries) g(for) f(Solaris) i(2.5.) n(1,) j(2.6) n(,) g(2.7/SP) -8
b(ARC,) 33 b(2.7/I) n(ntel,) i(IRIX) e(6.2,) h(6.5,) h(Digital) d(UNIX)
h(4.0) n(D,) 150 4583 y(HP-UX) 20 b(10.20) n(,) h(and) e(HP-UX.) p
Fl 150 4888 a(2.1) 119 b(Pr) n(er) n(equisites) p Fh
150 5116 a(2.1.1) 99 b(Needed) 26 b(Pri) o(vileges) p
Fp 150 5296 a(F) o(or) 20 b(the) g(standard) f(installation) h(of) g
(eZ) g(publish) f(you) h(will) h(need) e(to) h(ha) n(v) o(e) g(the) g
(follo) n(wing) f(pri) n(v) n(ile) o(ges) i(on) e(your) g(system:) p
150 5349 1410 4 v Fg 240 5405 a(1) p Ff 270 5428 a(An) d(alt) r(ernat) r
(i) n(v) o(e) i(instal) r(l) f(method) g(is) g(descr) r(ibed) g(in) h
(chapt) r(er) f(3) p Fp 1892 5823 a(5) p 90 rotate dyy
eop
%%Page: 6 7
6 6 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fi 275
333 a(\017) p Fp 41 w(Access) 21 b(to) f(Apache') -5
b(s) 20 b(httpd.co) n(nf) g(for) g(creating) g(tw) o(o) h(virtu) n(al) g
(hosts) g(and) f(for) g(enablin) n(g) h(the) g(re) n(write) f(engin) n
(e) h(and) 358 432 y(creatin) n(g) g(re) n(write) f(rules.) k(This) d
(is) g(absolutely) e(necessary) g(for) h(eZ) g(Publish) g(at) h(the) f
(momen) n(t.) p Fi 275 589 a(\017) p Fp 41 w(Access) j(to) g(comp) n
(iler) m(,) g(only) f(need) n(ed) h(if) g(you) e(can') o(t) h(use) h
(an) o(y) f(of) g(the) h(pre-) n(compiled) e(package) n(s) j(a) n(v) n
(ailable.) 32 b(\(Y) -9 b(o) n(u) 358 689 y(will) 16
b(ha) n(v) o(e) g(to) g(install) h(the) f(gcc) g(comp) n(iler) h(on) f
(you) n(r) g(system,) h(see) g(chapter) e(1) h(for) g(a) g(list) i(of) d
(sites) j(pro) m(viding) d(softw) o(are) 358 788 y(for) k(dif) n(fer) n
(ent) i(Unix) o(e) n(s.\)) p Fi 275 945 a(\017) p Fp
41 w(Access) f(to) h(a) f(shell) h(\(Y) -9 b(ou) 19 b(must) h(run) g
(certain) g(scripts) g(durin) n(g) h(installation,) e(and) h(sometimes)
g(for) f(maintenan) n(ce.\)) p Fi 275 1102 a(\017) p
Fp 41 w(Access) h(to) g(cron) f(jobs) h(\(Only) f(needed) g(if) h(you) f
(w) o(ant) h(to) g(use) g(the) g(eZ) g(ne) n(ws) g(feed) g(mod) n(ule) g
(for) f(re) o(gular) g(upd) n(ates) i(of) 358 1202 y(head) n(lines) g
(impor) n(ted) f(from) g(other) f(sites.\)) p Fi 275
1359 a(\017) p Fp 41 w(Access) h(to) h(Apach) n(e') -5
b(s) 21 b(modules) p Fi 275 1516 a(\017) p Fp 41 w(Access) f(to) h(a) f
(MySQL) g(or) g(PostgreSQL) g(database) p Fi 275 1673
a(\017) p Fp 41 w(Y) -9 b(ou) 19 b(might) h(also) g(need) g(the) g(pri)
n(vile) o(g) n(e) g(to) h(add) e(ne) n(w) h(libraries) g(to) h(you) n
(r) g(system.) 150 1853 y(Y) -9 b(ou) 19 b(might) g(also) h(use) g
(other) f(web) h(serv) o(ers) f(than) h(apach) n(e,) g(b) n(ut) g(then)
f(you') -6 b(re) 20 b(on) g(you) n(r) g(o) n(wn) f(since) h(we) g(ha) n
(v) o(en') m(t) g(tested) g(eZ) 150 1953 y(publish) k(on) h(other) f
(con\002gu) n(rations.) 40 b(If) 25 b(you) f(do) h(try) g(anoth) n(er) h
(web) f(serv) o(er) -5 b(,) 27 b(please) e(k) o(eep) g(a) g(log) g(of) g
(what) g(you) f(do) h(and) 150 2052 y(submit) 20 b(it) h(to) f(us) h
(\(pk) m(ej@ez.no\)) f(for) f(inclusion) h(in) g(futur) n(e) h(v) o
(ersion) n(s) g(of) f(this) h(manu) n(al.) p Fh 150 2306
a(2.1.2) 99 b(Needed) 26 b(Softwar) n(e) p Fp 150 2482
a(Y) -9 b(ou) 15 b(also) i(need) e(to) h(do) n(wnlo) n(ad) g(and) g
(install) g(the) g(follo) n(wing) f(packa) n(ges,) i(if) g(the) o(y) e
(aren') m(t) i(presen) n(t) g(on) f(you) n(r) g(system) h(alread) n(y:)
p Fi 275 2662 a(\017) p Fp 41 w(A) 23 b(database.) 33
b(Curren) n(tly) -5 b(,) 23 b(eZ) g(publish) f(supppo) n(rts) i(MySQL) e
(\(http://www) -5 b(.m) n(ysql.com) n(\)) 23 b(v) o(ersion) f(3.23) g
(or) g(later) 358 2762 y(and) d(PostgreSQL) h(\(http://www) -5
b(.) n(postgresq) n(l.or) o(g) n(\)) 21 b(v) o(er) n(sion) g(7.1) n(.3)
f(or) g(later) -5 b(.) p Fi 275 2919 a(\017) p Fp 41
w(libXml2) 20 b(\(http://x) n(mlsoft.or) o(g) n(/#Do) n(wn) n(loads\)) h
(v) o(er) n(sion) g(2.4.1) f(is) i(recom) n(mended) e(b) n(ut) h(v) o
(ersio) n(ns) h(as) g(old) e(as) i(2.2.) n(9) 358 3019
y(is) k(kno) l(wn) f(to) h(w) o(ork.) 39 b(\(Needed) 24
b(by) h(eZ) g(article.) 41 b(If) 25 b(you) f(wish) i(to) f(use) h(the) f
(def) o(au) n(lt) h(article) g(rend) n(erer) f(you) f(need) 358
3118 y(libXml2) 19 b(installed.) 25 b(Y) -9 b(ou) 20
b(can) g(create) f(your) g(o) n(wn) h(rende) n(rers) h(if) f(you) f
(don') o(t) g(w) o(ant) h(to) h(use) f(the) g(def) o(ault.\)) p
Fi 275 3275 a(\017) p Fp 41 w(libQdo) n(m) i(\(http://www) -5
b(.) n(trolltech.co) n(m\)) 22 b(is) g(a) g(part) g(of) f(QT) -6
b(,) 22 b(you) f(need) g(v) o(er) n(sion) h(2.2.) n(3) g(or) g(later) -5
b(.) 30 b(\(Need) n(ed) 22 b(by) f(eZ) 358 3375 y(ne) n(ws) j(feed') -7
b(s) 26 b(parsers.) 37 b(If) 24 b(you) f(wish) h(to) h(includ) n(e) g
(headlin) n(es) g(from) f(e) o(xter) n(nal) g(sites) i(\(e) o(xa) n
(mple) e(de) n(v) o(elo) n(per) -5 b(.ez.n) n(o) 358
3474 y(or) 23 b(slashdot.o) n(r) o(g\)) g(then) g(you) g(need) g(this) h
(installed.) 35 b(Y) -9 b(ou) 23 b(can) g(create) g(your) g(o) n(wn) g
(parsers) g(if) h(you) f(don) n(') o(t) h(w) o(ant) f(to) 358
3574 y(use) d(the) g(def) o(ault.\)) p Fi 275 3731 a(\017) p
Fp 41 w(Imag) n(eMagick) f(\(http://www) -5 b(.) n(imagemag) n(ick.or) m
(g/\)) 20 b(ne) n(west) f(v) o(ersion) g(\(Needed) g(by) g(eZ) h
(article,) f(eZ) h(image) g(cata-) 358 3831 y(logu) n(e,) h(and) e(all)
i(modu) n(les) g(using) f(images.) k(Y) -9 b(ou) 20 b(need) g(only) f
(the) h(comma) n(nd) g(line) h(v) o(er) n(sion.\)) p
Fi 275 3988 a(\017) p Fp 41 w(Apach) n(e) 33 b(\(http://h) n(ttpd.apa) n
(che.or) o(g) n(/\)) f(latest) h(1.3) e(release.) 61
b(\(It) 32 b(is) h(al) o(w) o(ays) f(recomm) n(ended) f(to) h(run) g
(the) g(latest) 358 4087 y(Apach) n(e) 25 b(release,) h(thoug) n(h) f
(eZ) g(pub) n(lish) h(should) n(n') o(t) e(be) h(v) o(ery) f(pick) m(y)
h(with) g(the) g(Apach) n(e) h(v) o(er) n(sions.) 39
b(W) -7 b(e') l(v) o(e) 25 b(used) 358 4187 y(eZ) 20
b(pub) n(lish) h(with) g(Apach) n(e) g(1.3.) n(13,) f(some) g(ha) n(v) o
(e) f(reported) g(that) h(Apache) f(1.3.9) g(isn') o(t) h(useful.\)) p
Fi 275 4344 a(\017) p Fp 41 w(mod) n(_re) n(write.) 28
b(This) 22 b(apache) f(mod) n(ule) h(is) g(included) e(in) i(all) g
(recent) f(v) o(ersion) n(s) i(of) e(RedHat) h(Linux) n(.) 30
b(If) 21 b(you) g(use) h(an) 358 4443 y(other) d(distro,) h(you) f(may)
h(need) f(to) h(recomp) n(ile) h(apache) e(with) i(mod) n(_re) n(write)
p Fi 275 4600 a(\017) p Fp 41 w(An) o(y) e(and) h(all) g(modules) g
(you) f(need) g(for) h(apache) f(in) h(addition) f(to) i(mod) n(_php) n
(.) 26 b(\(http://mo) n(dules.ap) n(ache.or) m(g/\)) p
Fi 275 4757 a(\017) p Fp 41 w(PHP) g(\(http) n(://www) -5
b(.php) n(.net/\)) 25 b(v) o(ersion) f(4.0.4) n(pl1) h(or) g(later) -5
b(.) 41 b(V) -9 b(ersion) 24 b(4.0.6) g(is) i(recomm) n(ended.) 39
b(Y) -9 b(ou) 25 b(need) g(the) 358 4857 y(sourc) n(e) e(code) e(v) o
(ersion) g(from) g(this) i(site,) g(for) f(windo) l(ws) h(you) e(can) h
(just) h(do) n(wn) n(load) f(the) g(binary) -7 b(.) 31
b(\(eZ) 22 b(pub) n(lish) h(uses) 358 4956 y(refer) n(ences) 30
b(for) g(objects) g(and) g(foreac) n(h) h(loop) n(s.) 57
b(Only) 29 b(v) o(ersion) g(4.0.4p) n(l1) h(and) g(later) h(supp) n
(orts) g(both) e(of) h(these) 358 5056 y(featur) n(es) 21
b(satisf) o(actorily) -5 b(.) n(\)) p Fi 275 5213 a(\017) p
Fp 41 w(eZ) 20 b(pub) n(lish) h(\(http://de) n(v) m(eloper) -7
b(.ez.no/\)) 19 b(v) o(erision) g(2.0) h(or) g(later) g(stable) h
(releases.) 150 5393 y(The) e(libraries) h(and) f(php) g(are) h(pack) n
(aged) f(pre-co) n(mpiled) g(for) g(Linux) g(i386) g(on) g(http://de) n
(v) o(e) n(loper) -5 b(.ez.n) n(o.) 25 b(The) 19 b(softw) o(are) h(is)
150 5493 y(listed) h(in) f(the) g(order) f(of) h(installation.) 150
5613 y(Y) -9 b(ou) 20 b(shou) n(ld) h(also) f(\002nd) g(a) h(list) g
(of) f(RPMs) h(at) g(http://www) -5 b(.b) n(randish.) n(co.uk/p) n
(hprp) n(m) p 150 5723 V 1892 5823 a(6) p 90 rotate dyy
eop
%%Page: 7 8
7 7 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fh 150
333 a(2.1.3) 99 b(Which) 25 b(Softwar) n(e) h(is) e(Alr) n(eady) i
(Installed?) p Fn 150 513 a(2.1.3) n(.1) 82 b(Systems) 21
b(Using) g(RPM) p Fp 150 694 a(RPM) e(is) g(a) f(system) g(for) f
(distrib) n(uting) g(pre-c) n(ompiled) g(softw) o(are.) 24
b(The) 17 b(packag) n(es) i(also) f(contain) f(pre-co) n(n\002gur) n
(ed) h(settings) 150 793 y(and) i(initialisation) g(\002les,) g(lea) n
(ving) g(almost) g(nothin) n(g) h(to) f(the) g(user) m(,) g(e) o(xcep) n
(t) h(decidin) n(g) g(what) f(to) g(install.) 150 918
y(T) -7 b(o) 17 b(check) f(if) h(a) h(pack) n(age) f(is) h(a) n(v) n
(ailable) e(on) h(you) n(r) g(system) g(you) f(can) h(run) f(the) h
(follo) n(win) n(g) g(comman) n(d) g(\(RPM) h(based) e(systems) 150
1018 y(\223rpm) 24 b(-qa) h(|) h(grep) e(<name) g(of) h(progr) n
(am/library) n(>\224.) 40 b(If) 25 b(you) g(need) f(to) i(kno) l(w) g
(where) e(you) h(can) g(\002nd) g(the) g(dif) n(fer) n(ent) h(\002les)
150 1117 y(from) 18 b(that) h(package) f(you) h(can) g(follo) l(w) h
(up) f(on) g(the) g(pre) n(v) n(ious) h(comm) n(and) f(with) g(the) g
(follo) n(wing) f(\223rpm) g(-ql) h(<rpm) g(name>) n(\224.) 150
1217 y(RPM) i(name) f(is) h(one) e(of) h(the) h(retur) n(ned) f(names) g
(from) f(the) h(pre) n(vio) n(us) h(comm) n(and,) f(e) o(xam) n(ple) p
Fe 2764 1187 a(2) p Fp 2797 1217 a(:) p Fk 309 1420 a(#) 40
b(rpm) g(-qa) f(|) h(grep) f(libxml) 309 1524 y(libxml-1.8.7-) n(80) 309
1628 y(libxmld-1.8.7) n(-80) 309 1732 y(#) h(rpm) g(-ql) f(libxml-1.8) n
(.7-80) 309 1835 y(/usr/bin/xml-) n(config) 309 1939
y(/usr/lib/libx) n(ml.so.1) 309 2043 y(/usr/lib/libx) n(ml.so.1.8.7) 309
2147 y(/usr/share/do) n(c/packages/lib) n(xml) 309 2250
y(/usr/share/do) n(c/packages/lib) n(xml/AUTHORS) 309
2354 y(/usr/share/do) n(c/packages/lib) n(xml/COPYING) 309
2458 y(/usr/share/do) n(c/packages/lib) n(xml/COPYING.L) n(IB) 309
2562 y(/usr/share/do) n(c/packages/lib) n(xml/NEWS) 309
2666 y(/usr/share/do) n(c/packages/lib) n(xml/README) 309
2769 y(/usr/share/do) n(c/packages/lib) n(xml/TODO) p
Fh 150 3032 a(2.1.4) 99 b(Fr) n(eeBS) r(D) p Fp 150 3212
a(When) 17 b(installing) g(and) g(compilin) n(g) h(PHP) g(on) f(a) h
(FreeBSD) g(system) f(you) g(might) g(enco) n(unter) g(an) g(error) g
(when) f(using) h(\226with-) 150 3312 y(dom) 23 b(which) h(says) h(you)
e(ha) n(v) o(e) h(a) g(conifg) n(ure) g(error) f(on) h(the) g(lib) m(.)
37 b(It) 25 b(turn) n(s) g(out) f(that) h(the) f(curr) n(ent) h(por) n
(t) g(of) f(libxml) g(installs) 150 3412 y(itself) h(as) h
(/usr/local/lib) n(/libxml2.a|) n(so) f(and) f(it) i(goes) e(unreco) n
(gnised) g(by) g(con\002gu) n(re.) 39 b(Y) -9 b(ou) 24
b(can) h(easily) g(get) f(aroun) n(d) h(this) 150 3511
y(prob) n(lem) 20 b(by) g(linking) f(the) h(libs) h(to) g(libxm) n
(l.a|so.) 150 3636 y(Y) -9 b(ou) 15 b(also) g(ha) n(v) o(e) g(to) g
(add) g(anoth) n(er) h(link) e(for) h(the) g(include) f(\002les) j
(\(which) d(are) h(in) g(a) h(quite) f(strange) f(place\)) h(:) 23
b(ln) 16 b(-s) f(/usr/local/includ) n(e/libxml2) n(/libxml) 150
3736 y(/usr/local/inclu) n(de/libxm) n(l) 150 3860 y(If) k(peop) n(le) h
(w) o(ant) f(to) h(setup) f(PHP4) g(by) g(the) g(ports,) g(the) o(y) f
(also) i(will) g(ha) n(v) o(e) e(to) h(modify) f(the) h(Mak) o(e\002le)
g(of) g(the) g(port) g(to) g(add) g(the) 150 3960 y(missing) f(\(from) f
(the) i(por) n(t) h(GUI\)) e(optio) n(ns) h(which) f(are) g
(\226disable-m) n(agic-qu) n(otes) h(and) f(\226with-q) n(tdom.) 24
b(The) 18 b(other) g(optio) n(ns) 150 4059 y(are) i(a) n(v) n(ailable) g
(from) f(the) h(port) g(GUI.) 150 4184 y(Thank) n(s) h(to) g(Da) n(vid)
f(T) -7 b(ouito) n(u) 21 b(for) e(pointin) n(g) i(this) f(out.) p
Fh 150 4446 a(2.1.5) 99 b(Mandrak) o(e) p Fp 150 4627
a(First) 21 b(read) f(chap) n(ter) h(2.9,) e(then) h(contin) n(ue) g
(reading) f(the) h(manual) g(fro) n(m) h(here.) p Fh
150 4890 a(2.1.6) 99 b(IRIX) p Fp 150 5070 a(By) 33 b(accessing) f(the)
g(softw) o(are) g(manager) f(\(you) g(must) i(be) f(root\)) g(you) f
(can) h(get) h(a) g(list) g(of) f(installed) h(softw) o(are,) i(scroll)
150 5170 y(or) 29 b(search) h(that) g(list) h(to) f(\002nd) f(the) h
(packa) n(ges) g(you') l(r) n(e) g(interested) f(in.) 54
b(Double) 29 b(click) h(on) f(the) h(tabs) g(to) g(the) g(left) g(to) g
(get) 150 5269 y(infor) n(mation) 20 b(abou) n(t) h(where) f
(speci\002c) g(\002les) h(are) f(installed.) p 150 5322
1410 4 v Fg 240 5378 a(2) p Ff 270 5401 a(A) c(line) i(start) r(ing) f
(with) h(a) f(hash-sign) h("#") f(are) h(input) g(from) f(the) h(user) f
(to) g(the) h(shell.) p 150 5723 3525 4 v Fp 1892 5823
a(7) p 90 rotate dyy eop
%%Page: 8 9
8 8 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fh 150
333 a(2.1.7) 99 b(RA) l(Q) 24 b(3) p Fp 150 513 a(There) j(is) i(a) f
(separate) g(chapter) f(2.7) g(in) h(this) h(manu) n(al) g(describ) n
(ing) f(installation) g(on) f(a) i(RA) -5 b(Q) 29 b(3) f(serv) o(er) -7
b(.) 50 b(It) 28 b(w) o(as) h(kind) n(ly) 150 613 y(pro) o(v) n(ided) 20
b(by) f(Chris) i(Mason,) p Fh 150 875 a(2.1.8) 99 b(W) n(indo) o(ws) p
Fp 150 1056 a(W) m(indo) n(ws) 20 b(installation) f(is) i(described) e
(in) i(its) g(o) n(wn) f(chap) n(ter) h(2.8) n(.) p Fh
150 1319 a(2.1.9) 99 b(Other) 25 b(Systems) p Fp 150
1499 a(On) 18 b(other) f(systems) i(you) e(should) g(read) h(the) g
(docum) n(entation) f(for) h(that) g(system) g(to) h(learn) e(ho) n(w) h
(to) g(\002nd) g(out) g(what) g(softw) o(are) 150 1599
y(is) j(already) e(installed.) 150 1723 y(Y) -9 b(ou) 23
b(could) g(try) h(to) g(use) g(the) g(comman) n(d) g(\223\002nd\224) g
(to) g(\002nd) g(the) g(softw) o(are.) 35 b(It) 25 b(is) g(used) e
(thus:) 33 b(\223\002nd) 24 b(.) 36 b(-name) 23 b(\\*<pro) n(gram) 150
1823 y(name>\\*) n(\224) g(fro) n(m) f(the) g(/usr/,) g(/local/) g(,) h
(/lib/,) f(/share/) g(director) n(ies.) 31 b(In) 21 b(e) o(xtreme) g
(cases) i(you) e(cou) n(ld) h(try) g(from) f(the) h(roo) n(t) h(of) 150
1923 y(the) d(system,) g(b) n(ut) g(this) g(will) h(tak) o(e) e(a) i
(long) e(time) h(and) f(will) i(also) f(hog) f(resour) n(ces) i(on) e
(your) g(comp) n(uter) -5 b(.) 25 b(Theref) n(ore) 20
b(we) g(ur) o(g) n(e) 150 2022 y(you) d(to) g(learn) g(ho) n(w) g(to) h
(use) g(the) f(prop) n(er) h(installation) f(feature) n(s) i(of) e
(your) f(system) i(to) g(\002nd) f(the) g(softw) o(are) g(already) g
(installed.) p Fh 150 2285 a(2.1.10) 99 b(Installatio) n(n) 26
b(of) f(Requir) n(ed) h(Softwar) n(e) p Fp 150 2465 a(If) e(you') l(v) m
(e) h(fou) n(nd) g(pre-) n(compiled) e(v) o(ersions) h(of) g(all) i
(the) e(softw) o(are) g(packag) n(ed) h(for) f(use) h(with) g(an) f
(installation) g(tool,) h(you) 150 2565 y(just) 18 b(ha) n(v) o(e) f
(to) h(install) g(that) g(softw) o(are) f(using) g(the) h(tool.) 24
b(Instructio) n(ins) 18 b(for) f(its) i(usage) e(is) i(often) e(fou) n
(nd) h(using) f(the) h(comm) n(and) 150 2665 y(\223man) i
(<installation) f(tool) h(name>\224) f(or) h(by) g(reading) f(you) n(r)
i(system') -5 b(s) 21 b(doc) n(umentatio) n(n) g(or) f(the) g(supplier)
n(') -5 b(s) 21 b(website.) 150 2789 y(If) c(you') l(v) m(e) h(had) f
(to) g(do) n(wnlo) n(ad) h(source) f(cod) n(e) h(you) f(will) h(\002nd)
g(instruc) n(tions) g(on) f(ho) n(w) g(to) h(comp) n(ile) g(and) f
(install) h(the) g(softw) o(are) 150 2889 y(you') -6
b(v) o(e) 22 b(do) n(wnlo) n(aded) g(at) i(the) e(softw) o(are) h(de) n
(v) m(eloper') -7 b(s) 24 b(website.) 33 b(This) 23 b(requ) n(ires) h
(a) f(bit) g(of) f(kno) n(wle) n(dge) h(and) f(you) g(shou) n(ld) 150
2988 y(only) d(under) n(tak) o(e) i(this) f(if) h(you) e(feel) h
(con\002den) n(t) h(abou) n(t) g(the) g(job) m(.) 150
3113 y(This) g(man) n(ual) g(will) g(only) e(co) o(v) o(er) g
(con\002gu) n(ration) h(of) g(the) g(softw) o(are) g(needed) f(and) h
(compilatio) n(n) h(of) f(PHP) h(to) f(use) h(the) f(other) 150
3212 y(softw) o(are.) p Fh 150 3475 a(2.1.11) 99 b(Important) 25
b(Notice) p Fp 150 3656 a(Y) -9 b(ou) 31 b(should) g(read) h(all) g
(the) g(README,) g(INST) -8 b(ALL) 32 b(and) f(similar) h(\002les) h
(foun) n(d) f(with) g(the) g(softw) o(are) g(pack) n(ages) g(you) 150
3755 y(do) n(wn) n(load.) h(The) o(y) 22 b(often) g(contain) g(tips) i
(on) e(ho) n(w) h(to) g(con\002gu) n(re,) h(comp) n(ile) g(and) e
(install) i(the) f(softw) o(are) f(on) h(you) n(r) h(system.) 150
3855 y(It) c(will) h(sa) n(v) o(e) g(you) e(a) i(lot) f(of) g(time) g
(and) g(aggra) l(v) n(ation) g(if) g(you) g(follo) n(w) f(instruction) n
(s) i(supplied) f(with) g(the) g(softw) o(are.) 150 3979
y(If) k(prob) n(lems) h(arise) g(dur) n(ing) g(installation) e(of) i
(the) f(softw) o(are,) h(please) f(turn) g(to) g(the) h(supp) n(liers) g
(suppor) n(t) g(forum) n(s,) h(mailing) 150 4079 y(list) c(archi) n(v) m
(es) g(and) e(F) -6 b(A) h(Qs,) 22 b(your) e(que) n(stions) i(will) f
(often) f(be) h(answered) f(there.) 27 b(If) 20 b(the) h(supplier') -7
b(s) 22 b(forum) n(s) g(doesn') m(t) f(seem) 150 4179
y(to) f(help) g(you,) f(you) g(should) h(check) f(the) h(suppo) n(rt) h
(foru) n(ms) g(at) g(our) e(site.) 150 4303 y(Y) -9 b(ou) 20
b(shou) n(ld) h(al) o(w) o(ays) f(do) g(a) h(search) f(of) g(the) g
(foru) n(ms) h(befo) n(re) f(posting) g(an) o(y) f(question) n(s.) p
Fl 150 4608 a(2.2) 119 b(Compile) 31 b(Con\002guration) p
Fh 150 4835 a(2.2.1) 99 b(PHP) p Fp 150 5016 a(Impo) n(rtant) 17
b(:) 24 b(Y) n(OU) 18 b(NEED) f(T) o(O) g(RECOMPILE) g(PHP) -9
b(.) 17 b(No) g(kno) n(wn) f(Linux) g(distros) h(does) g(yet) g(ha) n
(v) o(e) g(all) h(the) f(php) f(features) 150 5116 y(requir) n(ed) k
(by) g(eZ) h(pub) n(lish.) k(This) c(means) f(that) g(you) f(need) h
(to) g(compile) f(the) i(php) e(modu) n(le) i(from) e(source.) 150
5215 y(Y) -9 b(ou) 24 b(may) f(\002nd) h(preco) n(mpiled) g(binar) n
(ies) h(for) f(you) n(r) h(system) f(at) h(the) f(eZ) g(publish) f(web)
h(site,) p Fd 26 w(http://de) n(veloper.) 150 5315 y(ez.no) p
Fp(.) h(T) -7 b(ak) o(e) 20 b(a) g(look) g(at) g(the) h(\223Contrib) l
(utions\224) f(section) g(in) h(the) f(do) n(wn) n(load) g(area.) p
150 5723 V 1892 5823 a(8) p 90 rotate dyy eop
%%Page: 9 10
9 9 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(2.2.1) n(.1) 82 b(Unpacking) p Fp 150 513 a(After) 22
b(you) f(ha) n(v) o(e) h(do) n(wn) n(loaded) f(PHP) i(you) f(need) f
(to) h(unpack) f(it) i(some) n(whe) n(re) g(where) e(you) h(can) g(com)
n(pile) h(and) e(con\002gu) n(re) 150 613 y(the) f(softw) o(are.) 25
b(T) -7 b(o) 20 b(unpa) n(ck) h(run) e(the) h(comman) n(d:) p
Fk 309 816 a(#) 40 b(tar) g(zxvf) f(php-4.0.x) n(.tar.gz) p
Fp 150 1020 a(Where) 29 b(the) h(x) f(is) i(the) e(v) o(ersion) f(of) i
(php) e(you') -6 b(v) o(e) 29 b(do) n(wnlo) n(aded.) 52
b(Then) 29 b(you) g(need) f(to) i(mo) o(v) m(e) g(into) f(the) h
(directo) n(ry) f(you) 150 1119 y(e) o(xtracted) 19 b(php) g(into:) p
Fk 309 1323 a(#) 40 b(cd) g(php-4.0.) n(x) p Fn 150 1569
a(2.2.1) n(.2) 82 b(Con\002guratio) n(n) p Fp 150 1749
a(Y) -9 b(ou') m(ll) 25 b(need) d(either) h(an) g(apache) f(modu) n(le)
i(or) f(a) g(comman) n(d) h(line) f(\(CGI\)) g(v) o(ersion) f(of) h
(PHP) h(to) f(use) g(eZ) h(pub) n(lish) g(on) f(you) n(r) 150
1849 y(website.) i(W) -7 b(e) 22 b(recom) n(mend) e(you) f(use) i(PHP) g
(as) g(an) f(apach) n(e) h(modu) n(le.) 26 b(Y) -9 b(ou) 20
b(will) h(also) f(need) g(the) g(comman) n(d) g(line) h(v) o(ersio) n
(n) 150 1948 y(if) f(you) g(w) o(ant) g(to) g(use) h(the) f(cron) f
(jobs) h(for) g(period) n(ical) h(upd) n(ates) g(of) f(the) g(eZ) h(ne)
n(ws) f(feed) g(mod) n(ule.) 150 2073 y(Thus) k(for) f(our) h(reco) n
(mmend) n(ed) h(installation) e(of) h(PHP) h(you) e(need) h(both) f
(the) h(comma) n(nd) g(line) g(and) g(modu) n(le) h(v) o(er) n(sions) g
(of) 150 2173 y(PHP) -9 b(.) p Fn 150 2419 a(Common) p
Fp 82 w(Both) 19 b(the) g(comman) n(d) g(line) g(and) f(apache) g(modu)
n(le) i(v) o(er) n(sions) f(need) g(to) g(ha) n(v) o(e) f(the) h(follo)
n(w) n(ing) g(con\002gu) n(rations) 150 2518 y(added) g(to) h(the) h
(con) n(\002guration) e(tool:) p Fn 150 2726 a(\226enable-t) n
(rans-sid) p Fp 42 w(This) j(lets) g(PHP) h(use) f(session) g(id') -5
b(s) 22 b(which) f(don') m(t) h(rely) g(on) f(cook) n(ies.) 31
b(It) 22 b(doe) n(s) h(not) e(disable) h(nor) n(mal) 358
2825 y(coo) n(kie) f(based) e(sessions.) 358 2925 y(\() p
Ff(http://) r(www) l(.php.net/manu) r(al/en) r(/insta) r
(ll.con\002gure) r(.php#insta) r(ll.con\002gu) r(re.enabl) r(e-tran) r
(s-sid) p Fp(\)) p Fn 150 3091 a(\226with-mysql) p Fp
41 w(This) h(tells) h(PHP) g(that) g(the) f(mysql) f(function) n(ality)
i(shou) n(ld) g(be) f(used.) 358 3191 y(\() p Ff(http://) r(www) l
(.php.net/manu) r(al/en) r(/insta) r(ll.con\002gure) r(.php#insta) r
(ll.con\002gu) r(re.with-mysql) p Fp(\)) p Fn 150 3357
a(\226disable-mag) n(ic-quotes) p Fp 41 w(This) k(tells) g(PHP) g(to) g
(disable) f(magic) g(quo) n(tes) h(by) f(def) o(ault.) 34
b(you) 22 b(can) h(also) h(turn) f(this) h(featu) n(re) 358
3456 y(on) d(and) g(of) n(f) g(on) g(a) h(director) n(y) g(by) f
(directory) f(basis) j(in) e(either) h(the) f(\223.htaccess\224) h
(\002les) g(\(if) g(you) f(use) g(them\)) g(or) h(in) g(the) 358
3556 y(setup) e(of) f(the) i(virtua) n(l) g(serv) o(er) f(in) g
(\223httpd) n(.conf) 5 b(\224) n(.) p Fn 150 3722 a(IMOR) m(T) -7
b(ANT) p Fp 42 w(:) 28 b(From) 20 b(v) o(ersion) g(2.1) p
Fe 1269 3692 a(3) p Fp 1323 3722 a(onw) o(ard) n(s) i(magic) f(quotes) g
(must) g(be) g(turned) f(of) n(f) h(for) f(eZ) i(pub) n(lish) g(to) g
(w) o(ork) e(prop) n(-) 358 3822 y(erly) -5 b(.) 358
3921 y(\() p Ff(http://) r(www) l(.php.net/manu) r(al/en) r(/insta) r
(ll.con\002gure) r(.php#insta) r(ll.con\002gu) r(re.enabl) r(e-magic) r
(-quotes) p Fp(\)) p Fn 150 4067 a(\226with-dom) p Fp
40 w(This) 21 b(con\002g) n(ures) f(PHP) h(to) g(includ) n(e) g
(libxml.) p Ff 358 4145 a(\(http:/) r(/www) l(.php.net/ma) r(nual/e) r
(n/inst) r(all.con\002g) r(ure.php#in) r(stall.co) r(n\002gure.with-) r
(dom\)) p Fn 150 4311 a(\226with-qtdo) n(m) p Fp 42 w(This) e
(con\002gu) n(res) g(PHP) h(to) f(include) f(libqdo) n(m.) 25
b(It) 19 b(isn') o(t) f(up) h(on) f(the) h(PHP) h(site) g(with) f(a) g
(link,) f(b) n(ut) h(it) h(w) o(orks) 358 4411 y(as) g(\226with-do) n
(m.) p Fn 150 4556 a(\226with-imap) p Fp 40 w(This) 30
b(con\002g) n(ures) f(PHP) h(to) f(include) f(imap) h(suppo) n(rt.) 52
b(This) 30 b(is) g(used) e(by) h(eZ) g(mail) h(mod) n(ule.) 52
b(This) 29 b(pa-) 358 4635 y(ramete) n(rs) e(requ) n(ire) f(ssl) h
(supp) n(ort.) 41 b(Imap) 25 b(does) g(also) h(ha) n(v) o(e) f(bindin) n
(gs) h(to) g(k) o(erber) n(os.) 42 b(This) 25 b(causes) h(some) g
(linkin) n(g) 358 4714 y(pro) n(blems) e(on) g(RedHat) g(Linux.) 36
b(The) 24 b(w) o(ork) n(aroun) n(d) h(for) e(this) i(pro) n(blem) f(is)
h(to) f(type) g(this) h(comm) n(and) f(befo) n(re) g(you) 358
4793 y(comp) n(ile) d(:) p Fk 358 4951 a($) 39 b(export) g
(LDFLAGS="-L/) n(usr/kerberos/) n(lib) h(-lkrb5) f(-lgssapi_) n(krb5) h
(-lpam") p Fn 150 5117 a(\226with-o) n(penssl) p Fp 43
w(This) 20 b(will) h(enable) f(ssl) h(suppo) n(rt) g(in) f(PHP) 150
5324 y(Y) -9 b(ou) 26 b(should) g(also) h(go) g(throu) n(gh) g(the) g
(web) f(page:) p Ff 38 w(htt) r(p://www) l(.php.net) r(/manual) r
(/en/i) r(nstall) r(.con\002gure.php) p Fp 29 w(and) g(mak) o(e) h
(sure) f(that) 150 5424 y(there) 20 b(isn') o(t) g(other) f(func) n
(tionality) h(you) f(w) o(ould) h(lik) o(e) g(to) h(ha) n(v) o(e) e
(included) n(.) p 150 5477 1410 4 v Fg 240 5532 a(3) p
Ff 270 5556 a(eZ) d(publi) r(sh) g(v) o(ersi) r(ons) g(prior) i(to) f
(2.1) g(requi) r(red) g(magic) h(quotes) g(to) f(be) g(ena) r(bled) p
150 5723 3525 4 v Fp 1892 5823 a(9) p 90 rotate dyy eop
%%Page: 10 11
10 10 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(Command) 26 b(Line) p Fp 83 w(The) f(def) o(ault) g(is) i(to) f
(create) f(a) h(comm) n(and) f(line) h(v) o(ersion) e(of) i(PHP) -9
b(.) 26 b(Ther) n(efore) f(you) g(don) n(') o(t) h(need) e(to) 150
432 y(add) c(mor) n(e) h(con\002gu) n(ration) f(optio) n(ns) h(for) e
(this.) p Fn 150 678 a(A) n(pache) h(Module) p Fp 83
w(T) -7 b(o) 21 b(b) n(uild) e(an) i(apach) n(e) g(mod) n(ule) g(you) e
(need) g(to) i(add:) p Fn 150 865 a(\226with-a) n(pxs) p
Fp 42 w(This) f(compiles) g(PHP) h(as) g(an) f(apache) f(modu) n(le.) p
Ff 358 944 a(\(http:/) r(/www) l(.php.net/ma) r(nual/e) r(n/inst) r
(all.con\002g) r(ure.php#in) r(stall.co) r(n\002gure.with-) r(apxs\)) p
Fn 150 1190 a(Other) j(W) -5 b(eb) 23 b(Ser) o(v) o(ers) p
Fp 82 w(W) -7 b(e) 24 b(ha) n(v) o(en) n(') o(t) e(tested) h(our) e
(softw) o(are) h(with) h(other) e(web) h(serv) o(ers) g(than) g(apache)
n(.) 32 b(If) 22 b(you) g(need) f(to) 150 1289 y(try) 16
b(out) g(other) f(web) h(serv) o(er) n(s,) i(read) e(this) g(docum) n
(ent) p Ff 16 w(http) r(://www) l(.php.net) r(/manual) r(/en/i) r
(nstall) r(.con\002gure.php#i) r(nstall) r(.con\002gure.serv) q(ers) p
Fp 150 1389 a(to) k(learn) g(ho) n(w) g(you) f(con\002gu) n(re) h(for) g
(the) g(web) g(serv) o(er) f(you) h(will) h(be) f(using.) p
Fn 150 1635 a(Cr) o(eat) n(ing) 30 b(the) g(Con\002gura) n(tion) p
Fp 83 w(No) n(w) f(you) f(just) i(ha) n(v) o(e) f(to) g(run) g(the) g
(\223./con\002gu) n(re\224) g(progr) n(am) h(with) f(the) g(aprop) n
(riate) 150 1735 y(con\002gu) n(ration) 19 b(directi) n(v) m(es) h
(which) f(we) g(discussed) g(in) h(the) f(preceed) n(ing) g(sections,) g
(for) g(an) g(apache) f(module) g(you') l(d) g(do) h(the) 150
1834 y(follo) n(win) n(g:) p Fk 270 2038 a(#) 39 b(./configure) f
(--enable-trans) n(-sid) i(--with-m) n(ysql) 150 2117
y(--with-apxs) 19 b(--with-dom) 38 b(--with-qtdom) p
Fp 150 2320 a(Remember) 19 b(that) h(to) h(comp) n(ile) g(a) g
(script/cg) n(i) g(v) o(ersion) e(you') -6 b(d) 21 b(need) e(to) h
(change) f(that) i(line) f(to:) p Fk 309 2523 a(#) 40
b(./configure) e(--enable-tran) n(s-sid) h(--with-mysql) 150
2602 y(--with-dom) f(--with-qtdom) p Fn 150 2848 a(2.2.1) n(.3) 82
b(Compilation) p Fp 150 3029 a(T) -7 b(o) 20 b(compile) g(you) f(need) g
(to) i(run) e(the) h(comman) n(d) h(\223mak) m(e\224:) p
Fk 309 3232 a(#) 40 b(make) p Fn 150 3478 a(2.2.1) n(.4) 82
b(Installation) p Fp 150 3659 a(T) -7 b(o) 20 b(install) h(your) e(ne) n
(w) h(PHP) h(packag) n(e) g(you) e(need) h(to) g(run) f(the) i(follo) l
(wing) f(comma) n(nd:) p Fk 309 3862 a(#) 40 b(make) f(install) p
Fn 150 4108 a(2.2.1) n(.5) 82 b(Compiling) 21 b(the) f(php) h(module) g
(on) g(RedHat) e(7.x,) g(step) i(by) f(step) p Fp 150
4289 a(First) h(do) n(wn) n(load) f(the) g(source) g(from) f(www) -5
b(.ph) n(p.net.) 24 b(Y) -9 b(ou) 20 b(should) f(get) h(a) h(\002le) g
(called) f(somethin) n(g) g(lik) o(e) 150 4413 y(php-) n(4.0.6) n(.tar)
-5 b(.gz) 150 4637 y(First,) 21 b(unp) n(ack) f(the) g(tarball:) p
Fk 150 4762 a($) 40 b(tar) f(-xzf) g(php-4.0.6.tar) n(.gz) p
Fp 150 4986 a(No) n(w) -5 b(,) 19 b(enter) h(the) g(source) g(directo) n
(ry) p Fk 150 5111 a($) 40 b(cd) f(php-4.0.6) p Fp 150
5335 a(Apply) 19 b(the) i(k) o(erb) n(eros) f(w) o(orkaro) n(und:) p
Fk 150 5459 a($) 40 b(export) f(LDFLAGS=) n("-L/usr/kerber) n(os/lib) g
(-lkrb5) g(-lgssapi_krb) n(5) h(-lpam") p 150 5723 V
Fp 1871 5823 a(10) p 90 rotate dyy eop
%%Page: 11 12
11 11 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(Run) 20 b(the) g(con\002gu) n(re) h(script:) p
Fk 150 428 a($) 40 b(./configu) n(re) g(--with-apx) n(s=/usr/sbin/a) n
(pxs) g(--enable-f) n(tp) g(--with-xml) e(--with-dom) h(--enable) n
(-trans-) 150 507 y(sid) g(--with-config) n(-file-path=/et) n(c/httpd) g
(--with-mysql) n(=/usr) g(--with-pgsql=/) n(usr) h(--enable-) n
(inline-) 150 586 y(optimizatio) n(n) g(--with-ttf) e(--with-qtdom) g
(--with-gd) h(--enable-g) n(d-native-ttf) g(--with-) n(imap) h
(--include) n(dir=/usr) 150 665 y(--with-open) n(ssl=/usr) f
(--with-zlib) n(-dir=/usr) g(--with-ope) n(nssl=shared,/) n(usr) p
Fp 150 860 a(Compile) 20 b(the) g(modu) n(le:) p Fk 150
977 a($) 40 b(make) p Fp 150 1193 a(Install) 20 b(the) h(mod) n(ule,) f
(either) g(autom) n(aticly) h(or) f(manu) n(ally) -5
b(.) 150 1292 y(Manually) 19 b(:) p Fk 150 1388 a($) 40
b(su) 150 1484 y(#) g(cp) f(.libs/libphp) n(.so) h(/usr/lib/a) n(pache)
p Fp 150 1600 a(Automa) n(ticly:) p Fk 150 1696 a($) g(su) 150
1812 y(#) g(make) f(install) p Fp 150 2028 a(Restart) 21
b(apache) n(:) p Fk 150 2145 a(#) 40 b(/etc/rc.d) n(/init.d/httpd) e
(restart) p Fp 150 2361 a(V) -9 b(erify) 19 b(that) i(e) n(v) o(e) n
(rything) e(went) h(OK.) 150 2460 y(V) -9 b(erify) 19
b(that) i(apach) n(e) g(w) o(as) g(able) f(to) g(start:) p
Fk 150 2577 a(#) 40 b(ps) f(ax) h(|) g(grep) f(httpd) p
Fp 150 2793 a(Check) 20 b(the) g(apache) f(log) p Fk
150 2888 a(#) 40 b(tail) f(-f) h(50) f(/var/log/ht) n(tpd/error_log) p
Fp 150 3084 a(IMPOR) -5 b(T) d(ANT) 150 3200 y(When) 23
b(compilin) n(g) h(php) n(,) h(please) e(read) g(chapter) f(2.6.) 34
b(Especially) -5 b(,) 23 b(tak) o(e) h(note) f(of) g(chapte) n(r) h
(2.6.2) n(.4.) 34 b(It) 24 b(might) f(sa) n(v) o(e) g(you) 150
3300 y(for) d(hou) n(rs) h(with) f(deb) n(ug) n(ging) p
Fl 150 3589 a(2.3) 119 b(A) m(pache) 31 b(Con\002guration) p
Fp 150 3792 a(If) 25 b(you) g(don) n(') o(t) g(w) o(ant) h(to) f(chang)
n(e) h(the) f(Apache) g(con\002g) n(uration,) h(go) e(to) i(chapter) e
(2.) 40 b(Please) 26 b(tak) o(e) g(notice) f(of) g(the) g(re) n(write)
150 3891 y(rules.) g(The) o(y) 19 b(ha) n(v) o(e) h(been) f(chang) n
(ed) h(since) h(the) f(pre) n(vio) n(usly) g(v) o(ersion) n(s.) p
Fh 150 4138 a(2.3.1) 99 b(Dual) 25 b(V) l(irtual) g(Host) p
Fn 150 4311 a(2.3.1) n(.1) 82 b(Con\002guring) 20 b(Thr) o(ough) g
(httpd.conf) p Fp 150 4483 a(This) 25 b(set) h(up) f(is) h(based) e(on)
h(ha) n(ving) f(tw) o(o) h(dif) n(fer) n(ent) g(virtual) g(hosts) g
(for) f(your) g(administratio) n(n) i(back) n(-end) e(and) h(the) g
(main) 150 4583 y(site.) 50 b(The) 28 b(main) f(site) j(w) o(ould) d
(typically) g(be) h(kno) n(wn) f(as) i(\223www) -5 b(.yo) n(ursite.com)
n(\224) 29 b(and) f(the) g(admin) n(istration) g(w) o(ould) g(be) 150
4683 y(\223admin) n(.your) n(site.com\224;) 20 b(the) g(names) g(are) g
(up) g(to) g(you) n(,) h(theore) n(tically) g(you) e(could) g(ha) n(v) o
(e) g(dif) n(feren) n(t) i(names,) e(for) h(e) o(xamp) n(le) 150
4782 y(\223mysite.yo) n(ursite.com) n(\224) h(and) e
(\223administration) n(.mysite.co) n(m\224.) 150 4899
y(The) 28 b(virtual) g(host) g(is) i(con\002g) n(ured) e(throu) n(gh) g
(the) h(\223httpd) n(.conf) s(\224) g(\002le) g(which) f(is) h(the) g
(main) f(con\002g) n(uration) g(of) g(Apach) n(e.) 150
4998 y(F) o(ollo) n(wing) g(is) i(an) f(e) o(xam) n(ple) g(of) g(such) g
(a) g(host,) i(modify) d(it) i(to) f(re\003ect) g(you) n(r) h(o) n(wn) e
(installation) h(and) f(prefere) n(nces,) k(b) n(ut) 150
5098 y(befor) n(e) e(that) g(be) f(sure) g(to) h(add) f(the) g
(\223NameV) -5 b(irtualSer) n(v) o(er\224) 29 b(directi) n(v) m(e) h
(to) g(the) f(con\002gu) n(ration) g(\002le.) 53 b(The) 29
b(directi) n(v) o(e) g(is) 150 5198 y(\223NameV) -5 b(irtu) n(alServ) o
(er) 20 b(ip-add) n(ress\224) i(where) e(the) h(ip) g(add) n(ress) h
(is) g(the) e(address) h(where) f(the) h(serv) o(er) f(will) h(recei) n
(v) o(e) f(requ) n(ests) 150 5297 y(\(http://http) n(d.apach) n(e.or) o
(g) n(/docs/mo) n(d/core.h) n(tml#nam) n(e) n(virtualh) n(ost\).) 150
5414 y(Y) -9 b(ou) 27 b(should) f(consider) h(using) g(the) g(utility) g
(which) g(we) h(ha) n(v) o(e) f(online) g(for) f(creating) h(the) g
(con\002gu) n(ration.) 46 b(The) 28 b(URL) g(is) 150
5513 y(http://de) n(v) m(eloper) -7 b(.ez.no/vir) n(tualhost) 19
b(it) h(will) g(gener) n(ate) g(a) f(setup) g(with) h(the) f(latest) h
(needed) e(infor) n(mation.) 24 b(The) 19 b(presente) n(d) 150
5613 y(con\002gu) n(ration) h(here) n(in) h(migh) n(t) g(be) f
(slightly) g(outdated) n(,) h(so) f(we) h(recom) n(mend) f(the) g
(onlin) n(e) h(tool.) p 150 5723 V 1871 5823 a(11) p
90 rotate dyy eop
%%Page: 12 13
12 12 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(User) 21 b(Site) p Fc 222 w(#) 35 b(User) f(site) 289
424 y(<VirtualHost) g(your.ip.ad) n(dr.no>) 359 515 y(<Directory) g
(/your/docr) n(oot>) 429 607 y(Options) g(FollowSymLi) n(nks) 429
698 y(AllowOverrid) n(e) h(None) 359 789 y(</Directory>) 359
881 y(RewriteEngine) e(On) 359 972 y(RewriteRule) h(^/stats/s) n
(tore/\(.*\).gif$) 68 b(/your/docroot/e) n(zstats/user/sto) n
(restats.php) 34 b([S=3]) 359 1063 y(RewriteRule) g(^/fileman) n
(ager/filedownloa) n(d/\([^/]+\)/\(.*\)$) 68 b(/your/docroot) n
(/ezfilemanager/) n(files/$1) 34 b([T="applicatio) n(n/oct-) 150
1130 y(stream",S=2]) 359 1221 y(RewriteRule) g(^/mediaca) n
(talogue/catalogu) n(e/\(.*\)$) 69 b(/your/docroot) n(/ezmediacatalogu)
n(e/catalogue/$1) 33 b([T="application) n(/oct-) 150
1287 y(stream",S=1]) 359 1379 y(RewriteRule) h(!\\.\(gif|c) n
(ss|jpg|png|jar\)$) f(/your/docroot/) n(index.php) 359
1470 y(ServerAdmin) h(your.e-ma) n(il@address) 359 1561
y(DocumentRoot) g(/your/ap) n(ache/documentroo) n(t/publish_dist) 359
1653 y(ServerName) g(your.domai) n(n.com) 289 1744 y(</VirtualHost>) p
Fn 150 1969 a(Admin) 21 b(Site) p Fk 163 w(#) 39 b(Admin) h(site) 230
2073 y(<VirtualH) n(ost) g(your.ip.a) n(ddr.no>) p Fc
309 2164 a(<Directory) 34 b(/your/docroo) n(t>) 429 2256
y(Options) g(FollowSymLi) n(nks) 429 2347 y(AllowOverrid) n(e) h(None)
309 2438 y(</Directory>) 309 2530 y(RewriteEngine) f(On) 309
2621 y(RewriteRule) g(^/mediacata) n(logue/catalogue) n(/\(.*\)$) 69
b(/your/docroot/e) n(zmediacatalogue) n(/catalogue/$1) 34
b([T="appli) n(cation/oct-) 150 2687 y(stream",S=1]) 309
2779 y(RewriteRule) g(!\\.\(gif|css) n(|jpg|png|jar\)) g(/your/doc) n
(root/index_admi) n(n.php) p Fk 309 2882 a(ServerAdmin) 39
b(your_mai) n(l@domain.no) 309 2986 y(DocumentRoot) f(/your/apache/d) n
(ocumentroot/p) n(ublish_dist) 309 3090 y(ServerName) h(admin.you) n
(rdomain.org) 230 3194 y(</Virtual) n(Host>) p Fp 150
3397 a(The) 18 b(forma) n(t) i(of) e(the) g(\223httpd.co) n(nf) 5
b(\224) 18 b(\002le) h(is) g(co) o(v) o(er) n(ed) g(at) g(http://http) n
(d.apach) n(e.or) o(g) n(/docs/) f(for) g(a) h(complete) f(und) n
(erstandin) n(g) 150 3497 y(of) i(the) g(abo) o(v) m(e) h(info) n
(rmation) e(you') o(ll) h(need) f(to) i(read) e(that) h(docum) n
(entation.) 150 3621 y(The) g(directo) n(ry) g(\223/your) n(/docroo) n
(t/\224) h(is) g(the) f(director) n(y) h(where) e(you) h(e) o(xtr) n
(acted) g(eZ) h(pub) n(lish.) p Fn 150 3867 a(Err) o(or) c(Checking) p
Fp 83 w(Y) -9 b(ou) 17 b(can) h(check) e(that) i(e) n(v) o(ery) n
(thing) f(is) i(corre) n(ct) g(with) f(you) n(r) g(re) n(write) f
(rules) h(by) f(runn) n(ing) h(\223apach) n(e) g(-s\224,) 150
3967 y(which) 23 b(will) i(check) e(for) g(virtua) n(l) i(hosts.) 36
b(Ther) n(e) 24 b(should) f(also) h(be) g(an) g(erro) n(r) g(log) g
(\(con) n(sult) g(the) g(apache) f(docu) n(mentation) n(\)) 150
4067 y(which) d(you) f(can) h(read) g(to) g(check) f(for) h(error) n
(s.) p Fn 150 4296 a(Explanation) f(of) h(the) h(Rewrite) f(Rules) p
Fp 83 w(The) g(re) n(write) g(rules) g(do) g(the) g(follo) n(win) n(g:)
p Fc 150 4429 a(RewriteRule) 33 b(^/stats/store/\() n(.*\).gif$) 69
b(/your/docroot) n(/ezstats/user/s) n(torestats.php) 34
b([S=3]) p Fp 150 4620 a(This) 23 b(says) h(that) f(e) n(v) o(ery) n
(thing) g(serv) o(ed) f(from) g(\223/stats/store/\224) i(should) e(be) h
(serv) o(ed) f(by) h(the) g(storestats.php) f(script.) 34
b(This) 24 b(is) 150 4720 y(used) c(by) g(the) g(statistical) h(modu) n
(le) p Fc 359 4811 a(RewriteRule) 34 b(^/fileman) n(ager/filedownloa) n
(d/\([^/]+\)/\(.*\)$) 68 b(/your/docroot) n(/ezfilemanager/) n
(files/$1) 34 b([T="applicatio) n(n/oct-) 150 4878 y(stream",S=2]) p
Fp 150 5068 a(This) c(says) g(that) g(e) n(v) o(ery) n(thing) g(serv) o
(ed) f(fro) n(m) h(\223/\002lemanager) n(/\002ledo) n(wnlo) n(ad/\224) g
(should) f(be) h(redire) n(cted) g(to) g(fetch) g(info) n(r) n(-) 150
5168 y(mation) c(from) h(\223pub) n(lish_dist/ez\002leman) n
(ager/\002les\224.) 46 b(In) 27 b(other) g(w) o(ords,) h(when) f(peop) n
(le) h(do) n(wnlo) n(ads) g(a) f(\002le) h(from) f(the) 150
5268 y(\002lemanag) n(er) m(,) 20 b(the) g(\002le) h(is) g(serv) o(ed) f
(fro) n(m) h(the) f(directo) n(ry) g(speci\002ed) g(in) h(the) f
(second) f(part.) 150 5392 y(The) j(\223\210\224) g(just) h(after) f
(\223Re) n(writeRule\224) g(says) h(that) f(e) n(v) o(erty) n(thing) g
(which) g(starts) h(with) f(this,) h(in) g(other) e(w) o(ords) h(it) h
(is) g(a) g(start) g(of) 150 5492 y(line) f(mark) m(er) -5
b(.) 30 b(When) 21 b(w) o(orking) f(with) i(an) g(URL) g(that) g(is) g
(from) f(the) g(root) g(of) g(your) g(site,) h(ie.) 30
b(the) 21 b(part) h(fro) n(m) g(the) g(\002rst) g(slash) 150
5592 y(after) e(you) n(r) h(dom) n(ain) g(name) n(.) p
150 5723 V 1871 5823 a(12) p 90 rotate dyy eop
%%Page: 13 14
13 13 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(The) 20 b(\223$\224) g(sign) g(is) h(used) f(to) g(mark) g(the) g
(end) g(of) g(line,) g(in) g(orde) n(r) h(to) f(rememb) n(er) h(the) f
(full) g(line.) 150 456 y(The) j(part) p Fc 23 w(\223[T="appli) n
(cation/oct-stre) n(am",S=2]\224) p Fp 23 w(means) g(that) g(e) n(v) o
(ery) n(thing) g(which) g(is) h(matche) n(d) g(shall) f(be) h(of) e
(the) i(spe-) 150 555 y(ci\002c) g(mime) g(type) f(\(\223app) n
(lication/oct-stre) n(am\224,) i(ie.) 36 b(binar) n(y) 24
b(do) n(wnlo) n(ad\).) 35 b(The) 24 b(\223S=1\224) f(part) h(means) f
(that) h(if) g(we) g(match) 150 655 y(this) d(rule,) e(we) i(should) e
(skip) h(one) g(rule) g(ahead) f(befor) n(e) i(trying) e(to) h(match) g
(again) n(.) 150 778 y(The) g(ne) o(x) n(t) h(re) n(write) f(rule:) p
Fc 359 868 a(RewriteRule) 34 b(^/mediaca) n(talogue/catalogu) n
(e/\(.*\)$) 69 b(/your/docroot) n(/ezmediacatalogu) n(e/catalogue/$1) 33
b([T="application) n(/oct-) 150 934 y(stream",S=1]) p
Fp 150 1124 a(This) 26 b(re) n(writeru) n(le) h(basicly) e(does) h(the)
g(same) g(as) h(the) f(pre) n(v) n(iously) -5 b(,) 27
b(b) n(ut) f(it) g(\002x) o(es) g(so) h(that) f(the) g(\002les) h
(stored) e(in) h(the) g(media) 150 1224 y(catalogu) n(e) 21
b(is) g(serv) o(ed) e(correctly) 150 1446 y(The) h(last) h(re) n(write)
f(rule) p Fc 359 1536 a(RewriteRule) 34 b(!\\.\(gif|c) n
(ss|jpg|png|jar\)$) f(/your/docroot/) n(index.php) p
Fp 150 1726 a(is) 24 b(found) e(in) i(both) e(sites) j(\(admin) d(and) h
(user\).) 35 b(This) 23 b(means) g(that) h(e) n(v) o(ery) e(\002le,) j
(e) o(xcep) n(t) f(gif,) g(css,) h(jpg) f(and) e(png) h(\(and) g
(\002les) 150 1825 y(matched) d(against) h(the) g(pre) n(vio) n(us) h
(rule) f(when) g(in) h(the) f(user) g(site\)) h(should) e(be) i(redire)
n(cted) g(to) f(the) h(\002le) g(in) f(the) h(second) e(part,) 150
1925 y(ie.) 36 b(the) 24 b(inde) o(x.) n(php) f(or) h(inde) o(x) n
(_admin) n(.php) f(\002le.) 36 b(The) 24 b(reason) f(for) g(this) i(is)
f(that) g(we) h(don) n(') o(t) f(w) o(ant) g(an) o(y) n(one) g(trying) f
(to) h(get) 150 2025 y(direct) c(access) h(to) f(an) o(yth) n(ing) g
(which) g(migh) n(t) h(be) f(sensiti) n(v) o(e,) g(or) g(re) n(v) o(ea)
n(ling) g(about) g(the) g(site') -5 b(s) 21 b(operatio) n(n.) 150
2148 y(If) g(you) g(comp) n(iled) g(PHP) i(with) e(magic) g(quo) n
(tes;) i(or) e(other) g(softw) o(are) g(relies) g(on) g(PHP) h(using) f
(magic) g(quo) n(tes) i(you) d(can) h(add) 150 2247 y(the) f(follo) n
(win) n(g) h(line) f(into) g(each) g(virtual) f(host) i(section:) p
Fk 309 2449 a(php_flag) 39 b(magic_quote) n(s_gpc) h(off) 309
2552 y(php_flag) f(magic_quote) n(s_runtime) g(off) p
Fn 150 2874 a(2.3.1) n(.2) 82 b(Con\002guring) 20 b(php.ini) p
Fp 150 3053 a(Magic) g(quo) n(tes) h(may) f(also) h(be) f(turn) n(ed) h
(of) f(in) g(php) n(.) 26 b(This) 20 b(will) h(disable) f(magic) g(quo)
n(tes:) p Fc 150 3143 a(magic_quotes) n(_gpc) 35 b(=) g(Off) 150
3233 y(magic_quotes) n(_runtime=) f(Off) p Fn 150 3476
a(2.3.1) n(.3) 82 b(Con\002guring) 20 b(Thr) o(ough) g(.htaccess) p
Fp 150 3655 a(At) 25 b(present,) h(con) n(\002guring) e(the) h(re) n
(write) f(rules) h(in) g(.htaccess) g(\002les) g(is) h(not) f(supp) n
(orted.) 39 b(Ho) n(we) n(v) m(er) m(,) 25 b(you) f(may) h(switch) g
(of) 150 3755 y(magic) 20 b(quo) n(tes) h(in) g(an) f(.htacce) n(ss) i
(\002le.) p Fb 150 3878 a(Note:) j(Y) -8 b(ou) 21 b(must) f(set) h(up) f
(apa) n(c) o(he) g(to) g(accept) g(this.) p Fn 150 4121
a(User) j(Site) p Fp 83 w(In) f(your) f(docum) n(ent) i(roo) n(t) h
(\(/path) n(/to/inde) o(x) n(.php) n(/\)) f(create) f(a) h(\002le) h
(called) e(".htaccess") g(contain) n(ing) h(the) f(fol-) 150
4221 y(lo) n(wing) d(te) o(xt:) p Fk 309 4423 a(php_flag) 39
b(magic_quote) n(s_gpc) h(off) p Fl 150 4725 a(2.4) 119
b(eZ) 30 b(publi) r(sh) f(Installation) p Fh 150 4951
a(2.4.1) 99 b(Pr) n(ogram) 25 b(Files) p Fp 150 5130
a(The) 18 b(ne) o(x) n(t) h(step) g(is) g(to) f(install) h(the) f(eZ) g
(pub) n(lish) h(packag) n(e) g(in) f(you) n(r) h(docu) n(ment) f(root) f
(directory) -7 b(.) 24 b(First) 19 b(you) f(need) f(to) h(unpac) n(k)
150 5230 y(the) i(softw) o(are) g(in) g(a) h(tempo) n(rary) f(directo) n
(ry:) p Fk 309 5432 a(#) 40 b(cd) g(/tmp) 309 5534 y(#) g(tar) g(zxvf) f
(/path/to/) n(ezpublish-2.0) n(.tar.gz) p 150 5723 V
Fp 1871 5823 a(13) p 90 rotate dyy eop
%%Page: 14 15
14 14 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(The) 20 b(ne) o(x) n(t) h(step) g(is) g(to) f(mo) o(v) o(e) f
(the) h(\002les) h(to) g(you) n(r) g(docu) n(ment) f(root:) p
Fk 309 536 a(#) 40 b(mv) g(/tmp/pub) n(lish_dist) f(/your/apac) n
(he/documentroo) n(t) p Fp 150 739 a(When) 22 b(all) h(this) g(is) g
(don) n(e) g(you) e(need) h(to) g(tell) h(eZ) g(pub) n(lish) g(a) g
(little) g(abou) n(t) g(the) f(site) i(you) n(') l(re) e(runn) n(ing.)
31 b(Y) -9 b(ou') m(ll) 23 b(need) f(to) g(edit) 150
839 y(the) e(\223site.ini\224) g(\002le) h(which) f(you) f(will) i
(\002nd) f(in) g(the) h(docu) n(ment) f(root:) p Fk 309
1042 a(#) 40 b(cd) g(/your/ap) n(ache/documentr) n(oot) 309
1146 y(#) g(vi) g(site.ini) p Fp 150 1350 a(Instead) 24
b(of) h(vi) g(you) f(can) g(use) i(you) n(r) f(prefer) n(red) g(te) o
(xt) f(editor) -5 b(.) 39 b(Y) -9 b(ou') o(ll) 24 b(need) h(to) g(add) f
(infor) n(mation) g(about) g(the) h(usernam) n(e,) 150
1449 y(hostnam) n(e) j(and) f(passw) o(ord) g(of) g(your) f(database.)
47 b(More) 27 b(info) n(rmation) g(on) g(what) g(you) g(can) g(do) g
(with) h(\223site.ini\224) f(can) h(be) 150 1549 y(foun) n(d) 20
b(in) h(the) f(\223eZ) g(publish) f(Customisation) h(Guide\224.) 150
1673 y(The) g(ne) o(x) n(t) h(importan) n(t) g(step) f(is) i(to) e(run)
f(the) i(script) f(\223mod) n(\002x.sh\224.) p Fk 309
1877 a(#) 40 b(./modfix.sh) p Fh 150 2218 a(2.4.2) 99
b(Database) p Fp 150 2399 a(Some) 31 b(people) f(might) h(prefer) f(to)
i(use) g(php) n(MyAdmin) e(\(http://www) -5 b(.) n(phpwizar) n
(d.net/pr) n(ojects/phpM) n(yAdmin) n(/\)) 32 b(for) 150
2498 y(most) 20 b(of) g(this) h(part;) f(we) g(can) g(not) g(help) g
(you) f(with) i(installation) e(of) h(that) h(pro) n(gram,) e(thoug) n
(h.) p Fn 150 2744 a(2.4.2) n(.1) 82 b(First) 21 b(time) f
(installation) g(\(MySQL\)) p Fp 150 2925 a(No) n(w) f(you) g(need) f
(to) i(create) f(a) h(databa) n(se) g(in) g(MySQL,) f(the) g(def) o
(ault) g(name) g(we) g(use) h(is) g(publish,) e(b) n(ut) i(you) e(can) h
(change) f(that) 150 3025 y(to) i(whate) n(v) o(er) f(pleases) i(you) n
(.) p Fk 309 3228 a(#) 40 b(mysqladmin) e(create) h(publish) p
Fp 150 3431 a(Add) 23 b(a) h(publish) f(user) g(in) h(MySQL.) f(T) -7
b(o) 24 b(add) f(a) h(user) f(you) g(can) h(use) f(the) h(MySQL) f
(client) h(to) g(log) f(on) g(to) h(mysql) f(and) g(then) 150
3531 y(create) d(the) g(user:) p Fk 309 3734 a(#) 40
b(mysql) f(>) h(grant) f(all) g(on) h(publish.*) e(to) i(publish@loc) n
(alhost) 309 3859 y(identified) f(by) g("secret";) p
Fp 150 4083 a(where) 22 b(secret) h(is) g(your) f(passw) o(ord.) 31
b(Then) 22 b(you) g(need) g(to) h(add) f(the) h(def) o(au) n(lt) g(eZ) g
(publish) f(data) g(into) h(you) n(r) g(ne) n(wly) f(created) 150
4183 y(database:) p Fk 309 4386 a(#) 40 b(mysql) f(-uroot) g(-p) h
(publish) f(<) g(sql/publish_) n(mysql.sql) p Fn 150
4632 a(Adding) 22 b(Pr) o(e-De\002ned) f(Data) p Fp 82
w(If) h(you) e(w) o(ant) i(to) g(add) f(the) h(pre-d) n(e\002ned) f
(data) h(of) g(the) f(distrib) n(ution) g(you) g(shou) n(ldn') o(t) g
(add) 150 4732 y(an) o(y) e(data) h(manually) f(to) i(the) f(site) h
(befo) n(re) g(e) o(x) o(e) n(cuting) f(these) g(comma) n(nds.) 150
4856 y(First) h(we) g(need) e(to) h(add) g(\002les) h(and) f(images) g
(which) f(are) i(need) n(ed) f(by) g(the) g(database.) p
Fk 309 5060 a(#) 40 b(tar) g(zpxvf) f(data.tar) n(.gz) p
Fp 150 5263 a(Then) 19 b(we) i(need) e(to) i(run) e(\223mod\002x) n
(.sh\224) i(to) f(mak) o(e) g(sure) g(that) g(e) n(v) o(ery) n(thing) f
(is) j(read) n(able.) p Fk 309 5467 a(#) 40 b(./modfix.sh) p
150 5723 V Fp 1871 5823 a(14) p 90 rotate dyy eop
%%Page: 15 16
15 15 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(Then) 19 b(we) i(need) e(to) i(send) f(the) g(SQL) g(data) h
(into) e(the) i(databa) n(se:) p Fk 309 531 a(#) 40 b(mysql) f
(-upublish) g(-ppublish) f(publish) h(<) h(sql/data_) n(mysql.sql) p
Fp 150 730 a(Finally) 20 b(we) h(run) e(clearcach) n(e) p
Fe 1005 700 a(4) p Fp 1059 730 a(to) i(mak) o(e) e(sure) h(that) h(e) n
(v) o(er) n(ything) e(presented) g(is) i(cached) e(correctly:) p
Fk 309 929 a(#) 40 b(./clearcach) n(e.sh) p Fn 150 1165
a(2.4.2) n(.2) 82 b(P) n(ostgr) o(eSQ) n(L) 21 b(con\002guratio) n(n) p
Fp 150 1341 a(Impo) n(rtant) f(note) g(re) o(ga) n(rding) f(PostgreSQL)
h(suppo) n(rt) h(in) f(eZ) g(publish:) 150 1461 y(PostgreSQL) g(has) g
(one) g(limitation) f(which) h(is) h(not) f(good) f(for) g(eZ) i(pub) n
(lish:) 150 1581 y(Max) f(length) f(of) h(indenti\002er) n(s) i(used) d
(in) i(the) f(database,) f(table) h(names,) g(column) f(names) h(etc) g
(is) h(def) o(ault) f(set) h(to) f(32.) 150 1701 y(eZ) g(publish) g
(uses) g(names) g(which) g(sometimes) g(are) g(long) n(er) m(,) g(e.g:)
25 b(eZImag) n(eCatalogue_) n(ImageV) -9 b(a) n(riationGro) n(up) 150
1820 y(Theref) n(ore) 20 b(you) f(need) h(to) g(recomp) n(ile) h
(PostgreSQL) f(to) g(suppo) n(rt) h(a) f(lar) o(ger) f(v) n(alue) h(by)
f(altering:) 358 1999 y(#de) n(\002ne) i(N) m(AMED) m(A) -9
b(T) f(ALEN) 21 b(64) 150 2178 y(in) f(the) h(\002le) f(:) 26
b(src/include/p) n(ostgres_e) o(x) n(t.h) p Fn 150 2415
a(2.4.2) n(.3) 82 b(P) n(ostgr) o(eSQ) n(L) 21 b(setup) p
Fp 150 2591 a(On) k(last) h(con\002gu) n(ration) f(chan) n(ge) g(is) h
(necessary) -5 b(.) 39 b(This) 25 b(will) h(allo) n(w) f(TCP-IP) g
(connectio) n(ns) h(to) f(the) g(database,) h(not) e(only) 150
2691 y(unix) 19 b(sock) o(ets.) 150 2810 y(In) 31 b(pqsql-) n
(root/data) n(/postmaster) -5 b(.opts) 31 b(\(fo) n(r) h(instance) e
(/v) n(ar/lib/pg) n(sql/data/postma) n(ster) -5 b(.opts\)) 31
b(you) f(need) h(to) g(apply) f(a) 150 2910 y(\223-i\224) 20
b(paramete) n(r) -5 b(.) 26 b(The) 20 b(conten) n(t) h(of) f(the) g
(\002le) h(will) g(then) f(be) g(lik) o(e) g(this:) p
Fc 150 2997 a(/usr/bin/pos) n(tmaster) 34 b('-D') h('/var/lib/) n
(pgsql/data/') f('-i') p Fn 150 3233 a(2.4.2) n(.4) 82
b(First) 21 b(time) f(installation) g(\(P) n(ostg) n(r) o(eSQL\)) p
Fp 150 3409 a(Login) f(as) i(user) f(postgre) n(s) p
Fk 309 3508 a(#) 40 b(su) g(-) f(postgres) p Fp 150 3707
a(Create) 20 b(a) h(database) p Fk 309 3806 a($) 40 b(createdb) f
(publish) p Fp 150 4005 a(Create) 20 b(a) h(dabase) f(user) p
Fk 309 4104 a($) 40 b(createuser) e(publish) h(-W) p
Fp 150 4302 a(Create) 20 b(tables) p Fk 309 4401 a($) 40
b(psql) f(-Upublish) g(<sql/data_) n(mysql.sql) p Fp
150 4600 a(Y) -9 b(ou) 20 b(also) h(need) f(to) h(enable) f(PostgreSQL)
g(in) h(site.ini.) 27 b(Change) 20 b(the\224) h(DatabaseI) n(mplemen) n
(tation\224) g(con\002g) n(uration) f(so) h(it) 150 4700
y(reads:) 358 4878 y(DatabaseI) n(mplemen) n(tation=po) n(stgresql) p
Fn 150 5115 a(2.4.2) n(.5) 82 b(Updating) 20 b(the) h(Installatio) n(n)
p Fp 150 5291 a(This) h(section) g(is) g(for) g(users) g(who) f(are) h
(upd) n(ating) g(from) f(a) h(pre) n(v) n(ious) g(v) o(ersion) f(of) h
(eZ) g(pub) n(lish.) 31 b(Ther) n(e) 23 b(shou) n(ld) f(be) g(se) n(v) o
(eral) 150 5391 y(\002les) 31 b(ending) e(with) h(\223.sql\224) g(in) h
(the) f(directo) n(ry) g(\223upda) n(tes\224.) 56 b(Run) 30
b(the) g(\002les) h(needed) e(to) h(update) f(your) g(v) o(ersion) g
(to) i(the) 150 5490 y(curren) n(t.) 26 b(Y) -9 b(ou) 19
b(need) h(to) g(apply) f(all) i(the) f(updates) g(for) f(e) n(v) o(ery)
g(v) o(ersion) g(since) h(your) f(v) o(ersion) n(.) p
150 5534 1410 4 v Fg 240 5589 a(4) p Ff 270 5613 a(A) d(ne) n(w) i
(featur) r(e) f(in) g(eZ) g(publish) h(2.2) e(is) h(the) h(possibil) r
(ity) g(of) e(cle) r(aring) i(the) g(cache) h(from) d(the) i(admin) g
(site) p 150 5723 3525 4 v Fp 1871 5823 a(15) p 90 rotate
dyy eop
%%Page: 16 17
16 16 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fl 150
333 a(2.5) 119 b(No) o(w) 30 b(What?) p Fp 150 540 a(After) 25
b(installing) g(eZ) g(pub) n(lish) h(you) e(can) h(test) h(your) e
(site) i(throu) n(gh) f(the) g(URL) p Fk 26 w(http://ww) n
(w.yoursite.com) n(/) p Fp 26 w(and) f(you) 150 639 y(can) j
(administrate) g(you) n(r) h(site) h(fro) n(m) f(the) g(URL) p
Fk 28 w(http://a) n(dmin.yoursite.) n(com/) p Fp(,) h(of) f(cour) n
(se,) i(if) e(you) e(did) i(an) o(y) n(thing) 150 739
y(dif) n(fer) n(ent) 21 b(the) f(names) g(of) g(the) g(admin) f(and) h
(the) g(pub) n(lic) h(site) g(might) f(be) g(dif) n(fer) n(ent.) p
Fb 150 860 a(NO) m(TE:) p Fp 21 w(The) g(def) o(ault) g(user) h(name) f
(and) g(passw) o(ord) g(for) g(you) n(r) h(site) h(will) f(be) g(admin)
n(/publish.) 26 b(Remembe) n(r) 21 b(to) g(chang) n(e) h(the) 150
959 y(passw) o(ord.) 150 1080 y(The) i(ne) o(xt) g(manu) n(al) h(you) f
(should) f(read) h(is) i(the) e(\223eZ) h(pub) n(lish) g(Customisation)
f(Guide\224,) h(it) g(tells) g(you) f(ho) n(w) g(to) g(con\002gu) n(re)
150 1180 y(the) c(softw) o(are) f(to) h(use) f(the) h(functio) n
(nality) g(you) e(w) o(ant,) i(as) g(well) g(as) h(ho) n(w) e(you) g
(chan) n(ge) h(the) g(templa) n(tes) h(to) f(suit) g(you) n(r) g
(needs.) 150 1301 y(When) 27 b(you') -6 b(re) 28 b(\002nished) f(with) g
(the) h(design) f(and) g(the) g(initial) h(testing) f(you) g(can) g
(head) g(o) o(v) o(e) n(r) h(to) p Fk 27 w(http://zez.or) n(g/) p
Fp 28 w(for) 150 1401 y(articles) 20 b(about) f(commun) n(ity) h(b) n
(uilding) f(as) i(well) f(as) h(prog) n(ramming) n(,) f(or) g(you) f
(can) h(visit) p Fk 21 w(http://dev) n(eloper.ez.no) p
Fp 19 w(for) 150 1500 y(upda) n(tes,) f(articles) e(about) g(eZ) g
(publish) f(and) h(ho) n(w) g(to) g(w) o(ork) g(with) g(it,) i(as) f
(well) g(as) g(k) o(eep) n(ing) f(abreast) g(of) g(ne) n(w) g(de) n(v) o
(elo) n(pments.) p Fh 150 1756 a(2.5.1) 99 b(P) n(ost) 24
b(Install) h(Checklist) p Fp 254 1933 a(1.) 41 b(Does) 20
b(Apache) f(run?) 254 2092 y(2.) 41 b(Does) 20 b(PHP) h(run/w) o(o) n
(rk) f(as) h(an) f(Apache) g(mod) n(ule?) 254 2251 y(3.) 41
b(Does) 20 b(MySQL) g(run) n(?) 254 2410 y(4.) 41 b(Can) 20
b(you) f(access) i(your) e(virtual) h(hosts) g(at) h(all?) 254
2569 y(5.) 41 b(Does) 20 b(the) g(user) g(site) h(w) o(ork?) 254
2728 y(6.) 41 b(Does) 20 b(the) g(admin) f(site) j(w) o(ork) n(?) 254
2887 y(7.) 41 b(Consider) 22 b(this:) 31 b(all) 23 b(eZ) g(pub) n(lish)
h(sites) g(has) f(an) f(admin) g(site,) i(perhap) n(s) g(you) e(should)
f(call) j(the) e(admin) g(host) h(some-) 358 2986 y(thing) c(dif) n
(fer) n(ent) i(than) e(admin?) 254 3145 y(8.) 41 b(Check) 19
b(that) g(you') -6 b(v) o(e) 19 b(do) n(wnlo) n(aded) g(and) g(read) g
(the) g(con\002gu) n(ration) g(manu) n(al.) 26 b(A) 19
b(quick) g(tip) h(is) g(to) f(read) g(throug) n(h) h(the) 358
3245 y(\002le) g(\223site.ini\224) h(and) e(change) g(an) o(y) h(e-ma) n
(il) h(addresses,) f(passw) o(ords) g(etc.) 25 b(to) 20
b(\002t) h(your) e(o) n(wn) h(choices.) 254 3404 y(9.) 41
b(Log) 15 b(in) i(on) f(you) n(r) h(admin) f(site) h(\() p
Fk(http://) n(admin.yoursite) n(.com/) p Fp(\).) 23 b(Y) -9
b(ou) 16 b(will) h(be) g(presente) n(d) g(with) g(a) f(page) g(which)
358 3503 y(will) g(list) h(an) o(y) f(install) g(prob) n(lems.) 24
b(If) 16 b(an) o(y) f(proble) n(ms) i(appear) e(read) g(the) h(error) f
(message) h(presented) f(and) g(follo) n(w) g(an) o(y) 358
3603 y(instructio) n(ns.) 29 b(If) 21 b(that) h(f) o(ails,) g(read) f
(the) g(F) -6 b(A) h(Q.) 22 b(Then) f(go) g(to) p Fk
21 w(http://devel) n(oper.ez.no) p Fp 21 w(and) g(search) g(the) g
(foru) n(m) 358 3703 y(for) c(an) o(yo) n(ne) i(who) f(ha) n(v) o(e) g
(had) f(the) i(same) f(proble) n(m.) 25 b(Also) 19 b(check) e(the) i(b)
n(ug) f(list) h(for) f(an) o(y) f(open) h(b) n(ugs) g(co) o(v) m(ering)
g(you) n(r) 358 3802 y(pro) n(blem.) 25 b(Finally) 20
b(you) f(should) g(re) o(gister) h(to) g(the) g(mailing) g(list) h(and)
f(try) g(asking) f(for) h(help) f(there.) 212 3961 y(10.) 41
b(If) 19 b(e) n(v) o(er) n(ything) f(is) i(okay) f(go) g(to) g(the) g
(\223user\224) g(modu) n(le) h(and) f(chang) n(e) h(the) f(e-mail) g
(addre) n(ss) i(of) e(the) g(site) h(administrato) n(r) 358
4061 y(immed) n(iatly) -5 b(.) 212 4220 y(11.) 41 b(Chang) n(e) 21
b(the) f(passw) o(ord) g(of) g(the) g(admin) n(istration) g(user) g(to)
h(someth) n(ing) f(only) g(you) f(kno) n(w) -7 b(.) 212
4379 y(12.) 41 b(Start) 29 b(bro) l(wsing) g(the) f(public) g(part) h
(of) f(your) f(site,) 32 b(just) d(to) g(check) f(that) h(e) n(v) o(e) n
(rything) f(is) h(w) o(orking) n(;) 34 b(some) 28 b(of) h(the) 358
4478 y(articles) 20 b(supplied) f(as) i(def) o(ault) f(will) h(info) n
(rm) f(you) g(abo) n(ut) h(featur) n(es) g(of) f(the) g(softw) o(are.)
212 4637 y(13.) 41 b(Check) 19 b(that) i(Imag) n(eMagick) f(is) h(w) o
(ork) n(ing.) k(T) m(ry) 20 b(to) g(upload) f(an) h(image) g(to) g
(your) f(site.) p Fl 150 4936 a(2.6) 119 b(T) -9 b(r) n(oubleshooting) p
Fh 150 5159 a(2.6.1) 99 b(Pr) n(oblems) 25 b(During) g(Installation) p
Fn 150 5336 a(2.6.1) n(.1) 82 b(Fr) o(eeBSD) 20 b(4.2) g(and) g
(libxml2) p Fp 150 5513 a(The) d(curren) n(t) i(v) o(ersio) n(n) f
(\(2.2.) n(11\)) f(installs) i(itself) f(as) h(/usr/loca) n
(l/lib/libxml2.a) n(|so) f(and) f(goes) h(unr) n(ecognize) n(d) g(by) f
(con\002gu) n(re) 150 5613 y(\(PHP\).) j(Link) g(the) g(\002les) h(to) f
(/usr/local/lib/libx) n(ml.a|so.) p 150 5723 V 1871 5823
a(16) p 90 rotate dyy eop
%%Page: 17 18
17 17 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(2.6.1) n(.2) 82 b(Missin) r(g) 20 b(Compiler/Can) g(not) g
(Compile) h(\(C++/C\)) p Fp 150 513 a(When) k(comp) n(iling) h(php) e
(and) g(other) h(suppo) n(rt) h(pro) n(grams) f(\(lik) o(e) g(ImageM) n
(agick\)) g(you) f(need) g(the) i(GCC) g(compiler) -7
b(.) 41 b(It) 26 b(is) 150 613 y(recom) n(mended) j(that) h(you) f(use)
i(the) f(GCC) h(comp) n(iler) g(which) e(w) o(as) i(shipped) e(with) h
(your) f(Linux) g(distro/un) n(ix) i(system.) 150 712
y(In) 24 b(the) g(introdu) n(ction) g(\(see) g(chapter) g(1\)) g(it) h
(listed) f(some) g(sites) i(where) d(you) h(can) g(do) n(wn) n(load) g
(pre-co) n(mpiled) g(v) o(er) n(sions) h(of) 150 812
y(softw) o(are) 20 b(for) f(some) h(dif) n(feren) n(t) h(Unix) f(v) o
(er) n(sions.) 26 b(Please) 20 b(note) g(that) g(you) g(must) g(comp) n
(ile) h(php) f(on) f(your) g(o) n(wn.) p Fn 150 1058
a(2.6.1) n(.3) 82 b(I) 21 b(am) g(gett) n(ing) g(linking) g(err) o(or) n
(s) g(when) g(trying) f(to) g(b) n(uild) i(PHP) p Fp
150 1239 a(The) i(PHP) i(mod) n(ule) f(you) f(ha) n(v) o(e) g(comp) n
(iled) h(will) g(be) g(link) o(ed) f(again) n(s) i(k) o(erb) n(eros.) 38
b(This) 25 b(causes) g(some) g(linkin) n(g) g(prob) n(lems) 150
1338 y(on) 20 b(RedHat) g(Linux.) k(The) c(w) o(orka) n(round) f(for) g
(this) i(prob) n(lem) g(is) g(to) f(type) g(this) h(comm) n(and) f
(befo) n(re) h(you) e(comp) n(ile) i(:) p Fk 150 1442
a($) 40 b(export) f(LDFLAGS=) n("-L/usr/kerber) n(os/lib) g(-lkrb5) g
(-lgssapi_krb) n(5) h(-lpam") p Fh 150 1705 a(2.6.2) 99
b(Pr) n(oblems) 25 b(After) h(Installatio) n(n) p Fn
150 1885 a(2.6.2) n(.1) 82 b(P) n(ermission) 21 b(Denied) p
Fa 150 2057 a(Warning:) 88 b(fopen\("site) n(.ini","r+"\)) 150
2174 y(Permissio) n(n) 45 b(denied) f(in) g(classes/INIF) n(ile.php) g
(on) h(line) f(80) p Fp 150 2298 a(If) 20 b(you) f(get) i(this) f
(error) f(message) h(you) g(need) f(to) h(run) g(the) g(\223mod\002x) n
(.sh\224) g(script.) p Fn 150 2544 a(2.6.2) n(.2) 82
b(Can) 21 b(not) f(see) h(Images) p Fp 150 2725 a(Image) n(Magick) d
(is) h(not) f(w) o(orking) n(,) h(mak) o(e) f(sure) h(that) f(it) h(is)
h(w) o(ork) n(ing) f(by) e(using) h(the) h(comm) n(and) f(line) h(comm)
n(and) f(\223con) m(v) m(ert\224.) p Fn 150 2971 a(2.6.2) n(.3) 82
b(W) -5 b(ar) o(ning) 20 b(about) f(T) -8 b(emp) 22 b(Dir) o(ecto) n
(ry) p Fp 150 3151 a(If) e(you) f(get) i(an) o(y) e(such) h(w) o
(arning) f(you) g(need) h(to) g(set) h(the) f(temp) g(director) n(y) g
(in) h(php) n(.ini.) p Fn 150 3397 a(2.6.2) n(.4) 82
b(After) 20 b(installing) g(my) h(new) g(php) g(module,) f(apache) g
(dies) h(immediately) -6 b(.) p Fp 150 3578 a(RedHat) 30
b(as) g(released) f(ne) n(w) g(v) o(ersio) n(ns) h(of) f(the) h(open) n
(ssl) h(pack) n(ages) f(for) f(RedHat) g(7.x) p Fe 2665
3548 a(5) p Fp 2697 3578 a(.) 53 b(If) 30 b(these) f(erratas) g(is) i
(installed) 150 3677 y(befor) n(e) 24 b(you) e(compile) h(php) n(,) i
(you) n(r) f(php) e(modu) n(le) i(will) g(be) f(link) o(ed) g(again) n
(s) i(these.) 34 b(This) 24 b(will) g(ho) n(we) l(v) o(er) f(brak) o(e)
f(mod_ssl,) 150 3777 y(which) e(is) h(link) o(ed) e(to) i(the) f(old) g
(open) n(ssl) h(libraries.) k(There) 19 b(are) i(tw) o(o) f(dif) n(fer)
n(ent) h(w) o(ays) f(to) g(\002x) h(this:) 150 3877 y(Uninstall) f
(mod_) n(ssl:) 150 4001 y(#) g(rpm) g(-e) g(mod_) n(ssl) 150
4200 y(Or) g(you) g(may) f(do) n(wnlo) n(ad) h(the) h(apach) n(e) g
(source) e(rpm) h(from) f(redha) n(t.) 26 b(Then) 19
b(recomp) n(ile) i(and) f(install) g(it.) 150 4425 y(If) g(this) h
(doesn) n(') o(t) f(help,) g(look) f(for) h(clues) g(in) h(/v) n(ar/lo)
n(g/httpd/e) n(rror_) n(messages) p Fl 150 4730 a(2.7) 119
b(Installing) 30 b(on) g(RA) -5 b(Q) 30 b(3) p Fb 150
4940 a(Installing) 19 b(ezPublish) h(on) f(r) o(aq3) h(without) g
(messing) g(up) g(the) g(GUI) g(or) h(voidin) n(g) g(the) f(warr) o
(anty) -5 b(.) p Fp 150 5065 a(This) 20 b(is) g(untested) f(by) h(eZ) f
(systems,) h(and) f(we) h(pro) o(v) n(ide) g(this) g(\223as) h(is\224) f
(without) f(an) o(y) g(form) f(of) i(guar) n(antee) g(or) f(endo) n
(rsement,) 150 5164 y(either) h(e) o(xp) n(licitly) h(or) f(implicitly)
-5 b(.) 150 5289 y(First,) 21 b(add) e(the) i(dom) n(ain) f(into) g
(the) h(DNS,) f(b) n(ut) g(do) g(not) g(create) g(a) h(virtu) n(al) g
(site.) 150 5413 y(Log) f(in) g(by) g(telnet) g(\(install) g(SSH) h
(unless) g(you) e(are) h(desperate) f(to) i(get) f(hack) o(ed) n(\).) p
150 5467 1410 4 v Fg 240 5522 a(5) p Ff 270 5545 a(The) c(probl) r(em) g
(descr) r(ibed) i(here) f(may) g(only) h(apply) g(to) g(RedHat) g(7.0) p
150 5723 3525 4 v Fp 1871 5823 a(17) p 90 rotate dyy
eop
%%Page: 18 19
18 18 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(Put) 21 b(the) f(pub) n(lish) h(\002les) g(in) f(the) h(directo) n
(ry) f(you) f(w) o(ant) i(to) f(use,) g(I) h(used) f(/hom) n(e/sites/e)
o(xtrasites/mysite/web) 150 457 y(Install) g(mysql) g(3.23) f(or) h
(later) g(by) f(rpm,) h(there) f(is) i(one) f(out) g(there.) k(MySQL) c
(\(http://www) -5 b(.) n(mysql.co) n(m\)) 20 b(v) o(ersion) f(3.23) g
(or) 150 557 y(later) h(if) h(you) e(w) o(ant) h(to) h(comp) n(ile) 150
681 y(No) n(w) e(you) g(need) f(to) i(create) f(a) h(databa) n(se) g
(in) g(MySQL,) f(the) g(def) o(ault) g(name) g(we) g(use) h(is) g
(publish,) e(b) n(ut) i(you) e(can) h(change) f(that) 150
781 y(to) i(whate) n(v) o(er) f(pleases) i(you) n(.) p
Fk 309 984 a(#) 40 b(mysql) f(-uroot) g(-p) h(publish) f(<) g
(sql/publish.) n(sql) p Fp 150 1188 a(Add) 23 b(a) h(publish) f(user) g
(in) h(MySQL.) f(T) -7 b(o) 24 b(add) f(a) h(user) f(you) g(can) h(use)
f(the) h(MySQL) f(client) h(to) g(log) f(on) g(to) h(mysql) f(and) g
(then) 150 1287 y(create) d(the) g(user:) p Fk 309 1491
a(#) 40 b(mysql>grant) e(all) i(on) f(publish.*) g(to) g(publish@local)
n(host) 309 1595 y(identified) g(by) g("secret";) p Fp
150 1798 a(where) 22 b(secret) h(is) g(your) f(passw) o(ord.) 31
b(Then) 22 b(you) g(need) g(to) h(add) f(the) h(def) o(au) n(lt) g(eZ) g
(publish) f(data) g(into) h(you) n(r) g(ne) n(wly) f(created) 150
1898 y(database:) p Fk 309 2101 a(#) 40 b(mysql) f(-uroot) g(-p) h
(publish) f(<) g(sql/publish.) n(sql) p Fp 150 2304 a(Then) 19
b(get:) p Fi 275 2512 a(\017) p Fp 41 w(http://www) -5
b(.) n(freesoftw) o(ar) n(e.com/p) n(ub/info) n(zip/zlib/) 20
b(\(zlib) m(.tar) -7 b(.gz\)) p Fi 275 2678 a(\017) p
Fp 41 w(http://www) i(.) n(boutell.c) n(om/gd) 19 b(\(gd-1) n(.8.4.) n
(tar) -5 b(.gz\)) p Fi 275 2844 a(\017) p Fp 41 w(ftp://ftp) n(.uu.n) n
(et/graph) n(ics/jpe) o(g/jpe) o(g) n(src.v6b) g(.tar) g(.gz) 20
b(\(jpe) o(g) n(src.v6b) -5 b(.tar) g(.gz\)) p Fi 275
3010 a(\017) p Fp 41 w(http://www) g(.) n(php.) n(net) 21
b(\(ph) n(p-4.0) n(.4pl1.) n(tar) -5 b(.gz\)) 150 3218
y(Delete) 20 b(all) h(gd.h) e(\002les) i(on) f(your) f(system.) 25
b(Y) -9 b(ou) 20 b(can) g(\002nd) g(them) g(using) n(:) p
Fk 309 3421 a(#) 40 b(find) f(/) h(-name) f(gd.h) p Fp
150 3624 a(If) 20 b(there) g(are) g(more) f(than) h(one,) f(then) h
(delete) g(all) h(of) f(them.) 150 3749 y(No) n(w) g(add) g(the) g
(follo) n(win) n(g) g(line) h(to) f(the) g(/etc/ld.so.con) n(f) g
(\002le:) p Fk 309 3952 a(/usr/local/li) n(b) p Fp 150
4156 a(Sa) n(v) o(e) g(the) g(\002le,) h(and) f(run) n(:) p
Fk 309 4359 a(#) 40 b(/sbin/ldcon) n(fig) p Fp 150 4563
a(This) 20 b(w) o(as) h(an) g(impo) n(rtant) f(part,) g(becau) n(se) h
(Apache) f(need) n(s) h(this) g(dir) f(to) g(\002nd) g(the) h(corr) n
(ect) g(mod) n(ules.) 150 4687 y(Extract) f(the) g(zlib) g(archi) n(v) m
(e:) p Fk 309 4891 a(#) 40 b(tar) g(-zxvf) f(zlib.tar) n(.gz) h(#) g
(cd) f(zlib-1.1.3) p Fp 150 5094 a(And) 20 b(install) g(it:) p
Fk 309 5318 a(#) 40 b(./configure) e(--shared) 309 5422
y(#) i(make) 309 5526 y(#) g(make) f(install) p 150 5723
V Fp 1871 5823 a(18) p 90 rotate dyy eop
%%Page: 19 20
19 19 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(No) n(w) 20 b(install) h(the) f(JPEG-6b,) f(doing) g(the) h
(follo) n(wing) n(:) p Fk 309 535 a(#) 40 b(tar) g(-zxvf) f(jpegsrc.) n
(v6b.tar.gz) 309 637 y(#) h(cd) g(jpeg-6b) 309 739 y(#) g(./configure) e
(--enable-shar) n(ed) 309 842 y(#) i(make) 309 944 y(#) g(make) f
(install) p Fp 150 1146 a(Install) 20 b(the) h(PNG) f(library) p
Fk 309 1348 a(#) 40 b(wget) f(http://www.li) n(bpng.org/pub/) n
(png/src/libpng) n(-1.0.9.tar.gz) p Fp 150 1550 a(Then) 19
b(compile) h(the) g(packa) n(ge.) 150 1673 y(Get) h(Imag) n(emagick) e
(ImageMa) n(gick) h(\(http://www) -5 b(.) n(imagemag) n(ick.or) o(g) n
(/\)) 20 b(ne) n(west) g(v) o(ersion) f(Do) n(wnload) g(and) g(then:) p
Fk 309 1875 a(#) 40 b(tar) g(-zxvf) f(Imagemag) n(ick-xxx) 309
1977 y(#) h(cd) g(Imagemag) n(ick-xxx) 309 2080 y(#) g(./configure) 309
2182 y(#) g(make) 309 2284 y(#) g(make) f(install) p
Fp 150 2486 a(Then) 19 b(go) h(one) g(directo) n(ry) g(back,) f(and) h
(e) o(xtract) g(the) g(GD) g(archi) n(v) o(e) f(using:) p
Fk 309 2688 a(#) 40 b(tar) g(-zxvf) f(gd-xxx) 309 2791
y(#) h(cd) g(gd-xxx) p Fp 150 2993 a(No) n(w) 29 b(edit) g(the) g(Mak) o
(e\002le) f(\(using) g(vi) h(or) g(pico\)) f(and) g(check) g(which) g
(modules) g(you) g(w) o(ant.) 51 b(I) 29 b(remo) o(v) m(ed) g(the) g
(Freetyp) n(e) 150 3092 y(Librar) n(y) 19 b(\(-DHA) -11
b(VE_) n(LIBFREETYPE) 18 b(/) h(-lfreetyp) n(e\).) 25
b(After) 18 b(makin) n(g) h(the) f(chang) n(es) h(sa) n(v) o(e) g(the) f
(\002le) h(and) f(go) g(back) g(to) h(the) 150 3192 y(shell.) 25
b(No) n(w) 20 b(compile) g(GD:) p Fk 309 3394 a(#) 40
b(make) 309 3509 y(#) g(make) f(install) p Fp 150 3723
a(If) 24 b(this) h(is) g(gi) n(vin) n(g) g(an) o(y) e(error) n(s,) j
(just) f(remo) m(v) o(e) f(the) g(mod) n(ules) h(you) e(don') m(t) i
(ha) n(v) o(e) e(\(b) n(ut) h(don) n(') o(t) g(remo) o(v) m(e) h(the) f
(JPEG) g(lib) h(-) f(we) 150 3823 y(need) 19 b(that) i(one) e(!) 26
b(:\)\)) f(\)) 150 3946 y(No) n(w) 20 b(go) g(back) f(one) h(dir) m(,) f
(and) h(e) o(xtract) f(PHP4:) p Fa 309 4160 a(#) 45 b(tar) f(-zxvf) g
(php-4.0.4pl1) n(.tar.gz) 309 4275 y(#) h(cd) g(php-4.0) n(.4pl1) p
Fp 150 4490 a(First) 21 b(remo) o(v) m(e) f(an) o(y) g(cache:) p
Fk 309 4692 a(#) 40 b(rm) g(config.c) n(ache) 309 4794
y(#) g(make) f(clean) 309 4896 y(#./configure) f(--with-xml) h
(--with-my) n(sql) h(\\) 309 4999 y(--with-apxs=/) n(usr/sbin/apxs) e
(\\) 309 5101 y(--with-system) n(-regex) h(\\) 309 5203
y(--with-zlib) g(\\) 309 5306 y(--enable-safe) n(-mode) h(\\) 309
5408 y(--with-gdbm) f(\\) 309 5510 y(--enable-sysv) n(sem) h(\\) 309
5613 y(--with-ftp) f(\\) p 150 5723 V Fp 1871 5823 a(19) p
90 rotate dyy eop
%%Page: 20 21
20 20 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 309
333 a(--with-config) n(-file-path=/et) n(c/httpd/conf/) 38
b(\\) 309 436 y(--with-exec-d) n(ir=/usr/sbin/h) n(ttpd) i(\\) 309
540 y(--with-dom) f(\\) 309 644 y(--enable-tran) n(s-sid) 309
748 y(#) h(make) 309 852 y(#) g(make) f(install) p Fp
150 1055 a(run) 19 b(/sbin/ldcon) n(\002g) i(again) n(.) 150
1179 y(Apache:) j(\(Y) -9 b(our) 19 b(milage) h(may) g(v) n(ary) -7
b(,) 20 b(be) g(w) o(ary) g(of) g(paths\)) 150 1304 y(edit) g
(/etc/httpd/co) n(nf/httpd) n(.conf) f(and) h(add) g(the) g(Load) n
(modules) g(lines) g(lik) o(e) h(this:) p Fk 309 1507
a(#) 40 b(Extra) f(Modules) 309 1611 y(LoadModule) g(php_modul) n(e) h
(modules/mod) n(_php.so) 309 1715 y(LoadModule) f(php3_modu) n(le) h
(modules/li) n(bphp3.so) 309 1819 y(LoadModule) f(perl_modu) n(le) h
(/usr/lib/a) n(pache/libperl.) n(so) 309 1923 y(LoadModule) f
(php4_modu) n(le) h(/usr/lib/a) n(pache/libphp4.) n(so) 309
2026 y(LoadModule) f(php4_modu) n(le) h(lib/apache) n(/libphp4.so) p
Fp 150 2230 a(#) 20 b(Reconstructio) n(n) h(of) f(the) g(comp) n(lete) h
(modu) n(le) g(list) g(from) e(all) i(a) n(v) n(ailable) f(mod) n(ules)
150 2354 y(#) g(\(static) h(and) f(shared) f(ones\)) h(to) g(achie) n
(v) o(e) f(corre) n(ct) i(modu) n(le) g(e) o(x) o(ecu) n(tion) f(order)
-7 b(.) 150 2479 y(#) 20 b([WHENEVER) g(Y) n(OU) h(CHANGE) f(THE) g(LO)
m(ADMODULE) g(SECTION) g(ABO) l(VE) h(UPD) m(A) -9 b(TE) 19
b(THIS,) h(T) o(OO]) p Fk 309 2682 a(ClearModuleLi) n(st) 309
2786 y(#) 40 b(Extra) f(Modules) 309 2890 y(AddModule) g(mod_php.c) 309
2994 y(AddModule) g(mod_php3.c) 309 3097 y(AddModule) g(mod_perl.c) 309
3214 y(AddModule) g(mod_php4.c) p Fp 150 3429 a(Add) 20
b(the) g(second) f(line) i(belo) l(w) g(line) f(belo) n(w) g(the) g(re)
n(write) g(stuf) n(f,) g(abo) m(v) o(e) g(the) g(<V) -5
b(irtualho) n(st>) 21 b(directi) n(v) o(e) n(s.) 150
3554 y(NameV) -5 b(irtua) n(lHost) 21 b(216.) n(97.67) n(.4) f(Includ) n
(e) h(/etc/httpd/c) n(onf/e) o(x) n(trasites.conf) f(<V) -5
b(irtualHo) n(st) 21 b(216.9) n(7.67) n(.4>) 150 3678
y(create) f(this) h(includ) n(e) g(\002le) g(and) e(in) i(it) g(put) e
(the) i(apach) n(e) g(vitual) f(serv) o(er) f(directi) n(v) o(e) n(s) i
(for) f(you) n(r) h(site.) 150 3803 y(F) o(or) f(e) o(xam) n(ple:) p
Fk 309 4006 a(#) 40 b(User) f(site) 309 4110 y(<VirtualHost) f(yourIP>)
389 4214 y(ServerName) g(yourdomain.org) 389 4318 y(ServerAlias) g
(www.yourdomai) n(n.org) 389 4421 y(<Directory) g(/your/site/roo) n
(t/>) 469 4525 y(Options) h(FollowSy) n(mLinks) 469 4629
y(AllowOver) n(ride) h(None) 389 4733 y(</Directory) n(>) 389
4837 y(RewriteEngi) n(ne) g(On) p Fc 399 4928 a(RewriteRule) 33
b(^/stats/store/\(.) n(*\).gif$) 69 b(/your/site/roo) n
(t/ezstats/user/) n(storestats.php) 33 b([S=3]) 399 5019
y(RewriteRule) g(^/filemanager/fi) n(ledownload/\([^/) n(]+\)/\(.*\)$)
69 b(/your/site/r) n(oot/ezfilemanag) n(er/files/$1) 34
b([T="applica) n(tion/oct-) 150 5086 y(stream",S=2]) 399
5177 y(RewriteRule) f(^/mediacatalogue) n(/catalogue/\(.*\)) n($) 70
b(/your/site/r) n(oot/ezmediacatal) n(ogue/catalogue/) n($1) 35
b([T="applicat) n(ion/oct-) 150 5243 y(stream",S=1]) 399
5335 y(RewriteRule) e(!\\.\(gif|css|jpg|) n(png|jar\)$) h
(/your/site/ro) n(ot/index.php) p Fk 389 5439 a(ServerAdmin) k
(your_mail@dom) n(ain.no) 389 5542 y(DocumentRoo) n(t) i(/your/site/r) n
(oot/) p 150 5723 V Fp 1871 5823 a(20) p 90 rotate dyy
eop
%%Page: 21 22
21 21 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 309
333 a(</VirtualHost) n(>) 309 509 y(#) 40 b(Admin) f(site) 309
607 y(<VirtualHost) f(admin.yourdoma) n(in.org>) 389
704 y(<Directory) g(/your/site/roo) n(t>) 469 802 y(Options) h
(FollowSy) n(mLinks) 469 899 y(AllowOver) n(ride) h(None) 389
997 y(</Directory) n(>) 389 1094 y(RewriteEngi) n(ne) g(On) p
Fc 389 1179 a(RewriteRule) 34 b(^/mediac) n(atalogue/catalog) n
(ue/\(.*\)$) 69 b(/your/site/ro) n(ot/ezmediacatal) n(ogue/catalogue/) n
($1) 35 b([T="applicati) n(on/oct-) 150 1246 y(stream",S=1]) 389
1331 y(RewriteRule) f(!\\.\(gif|) n(css|jpg|png|jar\)) f
(/your/site/roo) n(t/index_admin.p) n(hp) p Fk 389 1428
a(ServerAdmin) 38 b(your_mail@dom) n(ain.no) 389 1526
y(DocumentRoo) n(t) i(/your/site/r) n(oot) 389 1623 y(ServerName) e
(admin.yourdoma) n(in.org) 389 1721 y(ServerAlias) g(admin.yourdom) n
(ain.org) 309 1818 y(</VirtualHost) n(>) p Fp 150 2015
a(restart) 20 b(apache:) p Fk 309 2213 a(#) 40 b(/etc/rc.d/i) n
(nit.d/httpd) f(stop) p Fp 150 2410 a(w) o(ait) 21 b(a) g(fe) n(w) f
(second) n(s) h(then) p Fk 309 2607 a(#) 40 b(/etc/rc.d/i) n
(nit.d/httpd) f(start) p Fp 150 2804 a(Then) 19 b(cho) n(wn) g(httpd.h)
n(ttpd) h(*) h(on) e(both) h(the) g(doma) n(in) h(and) e(admin.d) n
(omain) g(directories) h(to) g(get) g(it) h(to) f(w) o(ork.) 150
2922 y(If) g(all) h(is) g(well,) f(your) f(site) i(should) f(w) o(ork) n
(.) p Fh 150 3173 a(2.7.1) 99 b(Getting) 25 b(SSL) h(to) f(W) -7
b(ork) p Fp 150 3347 a(This) 22 b(is) h(a) g(bit) f(tough) n(er!) 31
b(Enable) 21 b(SSL) i(for) f(the) g(site) h(in) f(your) f(GUI.) h
(Generate) f(your) g(certi\002cates.) 31 b(Disable) 23
b(SSL) f(in) h(the) 150 3447 y(GUI.) d(Add) g(this) g(to) h(the) f(end)
g(of) g(you) n(r) h(e) o(xtr) n(asites.conf) p Fk 309
3544 a(#attempt) 39 b(to) h(modify) 309 3642 y(SSL) g(Listen) f
(xxx.xxx.x) n(xx.xxx:443) 309 3739 y(<VirtualHost) f(xxx.xxx.xxx.xx) n
(x:443>) 469 3837 y(ServerAdm) n(in) i(ubong) 469 3934
y(DocumentR) n(oot) g(/home/site) n(s/yoursite/we) n(b) 469
4032 y(<Director) n(y) g(/home/sites/) n(yoursite/web>) 628
4129 y(Options) f(FollowSymLi) n(nks) 628 4227 y(AllowOverrid) n(e) h
(None) 469 4324 y(</Directo) n(ry>) 469 4422 y(SSLEngine) e(on) 469
4519 y(SSLCertif) n(icateFile) h(/home/site) n(s/yoursite/cer) n
(ts/certificat) n(e) 469 4617 y(SSLCertif) n(icateKeyFile) g(/home/s) n
(ites/yoursite/) n(certs/key) 469 4714 y(AddHandle) n(r) h
(server-parse) n(d) g(.shtml) 469 4812 y(AddType) f(text/htm) n(l) h
(.shtml) 469 4909 y(AddHandle) n(r) g(cgi-wrapper) e(.cgi) 469
5007 y(AddHandle) n(r) i(cgi-wrapper) e(.pl) 469 5105
y(RewriteEn) n(gine) i(On) 469 5202 y(RewriteRu) n(le) g(!\\.\(gif|css)
n(|jpg|png\)$) f(/home/sit) n(es/public.edg) n(e.ai/web/inde) n(x.php)
469 5300 y(ErrorLog) f(/home/sites/yo) n(ursite/logs/e) n(rror_log) 469
5397 y(TransferL) n(og) i(/home/sites) n(/yoursite/log) n(s/access_log)
309 5495 y(</VirtualHost) n(>) p Fp 150 5613 a(This) 20
b(should) g(w) o(ork) n(.) 26 b(IF) 20 b(you) g(can') o(t) f(get) h
(it,) h(gi) n(v) o(e) e(me) h(an) g(email) h(and) e(I') o(ll) i(help) e
(if) i(I) f(ha) n(v) o(e) g(time:) 25 b(chris@net.ai) p
150 5723 V 1871 5823 a(21) p 90 rotate dyy eop
%%Page: 22 23
22 22 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fl 150
333 a(2.8) 119 b(Installing) 30 b(on) g(W) n(indo) o(ws) p
Fp 150 543 a(Please) c(do) n(wnlo) n(ad) g(and) f(read) g(the) h(W) m
(indo) l(ws) h(docu) n(mentation) d(from) h(the) h(eZ) g(pub) n(lish) g
(site) h(\(http://d) n(e) n(v) o(elop) n(er) -5 b(.ez.no\)) n(.) 150
643 y(Check) 18 b(the) g(\223File) h(Archi) n(v) o(e) n(\224) g(link) f
(und) n(er) h(\223Do) n(wnlo) n(ads\224) f(.) 25 b(It) 19
b(co) o(v) o(e) n(rs) g(all) g(the) f(steps) h(needed) e(for) h(a) g(w)
o(orking) f(installation) 150 742 y(unde) n(r) k(W) m(indo) l(ws) g
(using) f(Apache.) p Fl 150 1047 a(2.9) 119 b(Mandrak) o(e) p
Fp 150 1258 a(Thank) n(s) 21 b(to) g(Mark) e(Polsen) h(for) g(gi) n
(vin) n(g) h(us) f(this) h(infor) n(mation.) 150 1382
y(This) f(is) g(untested) f(by) h(eZ) f(systems,) h(and) f(we) h(pro) o
(v) n(ide) g(this) g(\223as) h(is\224) f(without) f(an) o(y) g(form) f
(of) i(guar) n(antee) g(or) f(endo) n(rsement,) 150 1482
y(either) h(e) o(xp) n(licitly) h(or) f(implicitly) -5
b(.) p Fh 150 1745 a(2.9.1) 99 b(Do) o(wnload) 25 b(the) g(F) n(ollo) o
(wi) n(ng) p Fp 150 1925 a(Do) n(wnlo) n(ad) c(what) f(you) f(need) g
(from) p Fk 20 w(http://d) n(eveloper.ez.n) n(o/filemanager/) n
(list/23/) p Fp 20 w(and) h(install) g(the) h(rpm) n(s!) 150
2050 y(That') -5 b(s) 20 b(all;) h(read) f(the) g(manu) n(al) h(from) e
(the) i(start) f(after) g(that,) g(and) g(install) h(eZ) f(pub) n(lish)
h(as) g(described) n(.) p 150 5723 V 1871 5823 a(22) p
90 rotate dyy eop
%%Page: 23 24
23 23 bop Fm 150 975 a(Chapter) 44 b(3) p Fo 150 1410
a(Installi) r(ng) 52 b(eZ) f(publish) h(without) g(virtual) 150
1659 y(hosts) g(and) g(mod_r) l(ewrite) p Fp 150 2110
a(Installing) 19 b(eZ) i(pub) n(lish) g(this) g(w) o(ay) f(has) g(se) n
(v) o(eral) g(adv) n(an) n(tages:) p Fi 275 2286 a(\017) p
Fp 41 w(no) f(root) h(rights) g(need) n(ed) p Fi 275
2441 a(\017) p Fp 41 w(no) f(virtual/du) n(al) i(hosts) f(or) g(mod_) n
(re) n(write) g(needed) p Fi 275 2596 a(\017) p Fp 41
w(no) f(subdom) n(ains) i(neede) n(d) p Fi 275 2752 a(\017) p
Fp 41 w(no) e(change) g(of) h(Apache) f(con\002gu) n(ration) h(needed) p
Fi 275 2907 a(\017) p Fp 41 w(installation) f(in) i(subdir) n(ectories)
f(possible) p Fi 275 3063 a(\017) p Fp 41 w(you) f(can) h(k) o(eep) g
(you) n(r) g(old) g(docum) n(ents) h(on) f(the) g(serv) o(er) 150
3238 y(The) g(disadv) n(a) n(ntages) g(are:) p Fi 275
3414 a(\017) p Fp 41 w(the) g(URLs) h(will) g(be) f("[...]) n(/inde) o
(x.) n(php/article) n(/articleedit/[...]) n(") h(instead) f(of) g
("[...) n(]/article/articleedit/[) n(...]") p Fi 275
3569 a(\017) p Fp 41 w(ne) n(w) g(featur) n(e) h(in) f(2.2,) f(so) i
(it') -5 b(s) 21 b(not) f(as) h(well) g(tested) f(as) h(norm) n(al) g
(dual) f(hosts) g(install) p Fl 150 3864 a(3.1) 119 b(Pr) n(er) n
(equisites) p Fp 150 4070 a(The) 20 b(follo) n(win) n(g) g(softw) o
(are) g(must) g(be) h(run) n(ning) f(on) f(your) g(serv) o(er) h(and) f
(you) h(must) g(ha) n(v) o(e) f(permissions) h(to) g(use) h(it:) p
Fi 275 4245 a(\017) p Fp 41 w(PHP) g(\() p Fd(http) n(://www.php.) n
(net) p Fp(\)) f(v) o(ersion) f(4.0.4) n(pl1) h(or) g(later) -5
b(.) p Fi 275 4401 a(\017) p Fp 41 w(A) 20 b(suppor) n(ted) g
(database:) p Fn 457 4567 a(\226) p Fp 41 w(MySQL) g(\() p
Fd(http://) n(www.mysql.c) n(om) p Fp(\)) g(v) o(ersion) f(3.23) g(or) h
(later) p Fn 457 4690 a(\226) p Fp 41 w(PostgreSQL) g(\() p
Fd(http:/) n(/www.postgr) n(esql.org) p Fp(\)) f(v) o(ersion) g(7.1.3) g
(or) h(later) 150 4865 y(The) g(follo) n(win) n(g) g(softw) o(are) g
(is) h(optiona) n(l,) g(b) n(ut) f(requir) n(ed) h(for) e(some) h(modu)
n(les) h(of) f(eZ) g(publish:) p Fi 275 5041 a(\017) p
Fp 41 w(libQdo) n(m) 36 b(\() p Fd(http:/) n(/www.troll) n(tech.com) p
Fp(\)) f(is) h(a) g(part) f(of) g(QT) -6 b(,) 36 b(you) e(need) h(v) o
(ersion) f(2.2.3) g(or) h(later) -5 b(.) 358 5141 y(\(Need) n(ed) 30
b(by) f(eZ) h(ne) n(ws) f(feed') -5 b(s) 30 b(parser) n(s.) 54
b(If) 29 b(you) g(wish) h(to) g(includ) n(e) g(headline) n(s) h(from) d
(e) o(xtern) n(al) i(sites) h(\(e) o(xam) n(-) 358 5240
y(ple) 20 b(de) n(v) o(elo) n(per) -5 b(.ez.no) 19 b(or) i(slashdot.o) n
(r) o(g\)) f(then) g(you) g(need) h(this) g(installed.) 27
b(Y) -9 b(ou) 20 b(can) g(create) h(you) n(r) h(o) n(wn) e(parsers) g
(if) 358 5340 y(you) f(don) n(') o(t) h(w) o(ant) h(to) f(use) g(the) h
(def) o(au) n(lt.\)) p Fi 275 5495 a(\017) p Fp 41 w(Imag) n(eMagick) 32
b(\() p Fd(http:) n(//www.imag) n(emagick.org) p Fp -2
w(\)) h(ne) n(west) f(v) o(ersion) g(\(Need) n(ed) h(by) f(eZ) g
(article,) j(eZ) 358 5595 y(image) 19 b(catalogu) n(e,) i(and) f(all) g
(modu) n(les) h(using) f(images.) 25 b(Y) -9 b(ou) 19
b(need) h(only) f(the) h(comman) n(d) h(line) f(v) o(ersion) n(.\)) 1871
5823 y(23) p 90 rotate dyy eop
%%Page: 24 25
24 24 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish_dist/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fl 150
333 a(3.2) 119 b(eZ) 30 b(publi) r(sh) f(installation) p
Fh 150 560 a(3.2.1) 99 b(Installing) 24 b(in) h(one) g(dir) n(ector) r
(y) f(\(Recommend) r(ed) h(install\)) p Fn 150 740 a(3.2.1) n(.1) 82
b(Installing) 21 b(the) f(\002les) h(f) n(or) f(eZ) h(publish) p
Fp 254 921 a(1.) 41 b(Extra) n(ct) 19 b(the) f(eZ) g(publish) f
(\002les) i(\(if) g(you) e(w) o(ant) h(some) g(e) o(xam) n(ple) h
(data,) f(e) o(xtr) n(act) p Fk 19 w(data.tar.g) n(z) p
Fp 19 w(too\)) f(and) h(if) g(the) o(y) g(are) 358 1020
y(not) h(on) h(the) g(serv) o(er) g(yet,) g(transfer) f(them) h(to) g
(the) g(serv) o(er) g(in) g(a) h(directo) n(ry) f(of) g(your) f
(choice.) 358 1120 y(\(e) o(x) n(ample:) p Fk 25 w(/home/userA) n
(/ezpublish) p Fp 20 w(reach) n(able) h(by) p Fk 20 w(http://www.y) n
(ourserver.com/) n(ezpublish) p Fp(\)) 254 1286 y(2.) 41
b(Cop) o(y) p Fk 16 w(installa) n(tion/htaccess) n(-nVH) p
Fp 17 w(to) p Fk 16 w(.htaccess) p Fp 16 w(in) 17 b(the) f(top) g
(director) n(y) h(of) f(your) f(eZ) i(pub) n(lish) g(installation.) 358
1386 y(\(e) o(x) n(ample:) p Fk 25 w(/home/userA) n(/ezpublish/.h) n
(taccess) p Fp(\)) 254 1552 y(3.) 41 b(Edit) 20 b(the) g(\002le) p
Fk 21 w(sitedir.i) n(ni) p Fp 21 w(and) g(set) h(the) f(righ) n(t) h
(director) n(y) -5 b(.) 358 1651 y(\(e) o(x) n(ample:) p
Fk 25 w(/home/userA) n(/ezpublish/) p Fp(\)) p Fn 150
1897 a(3.2.1) n(.2) 82 b(Database) 20 b(installatio) n(n) p
Fp 150 2078 a(If) g(you) f(ha) n(v) o(e) h(shell) h(access) f(to) h
(create) f(the) g(databa) n(se,) h(see) g(section) f(2.4.) n(2.) 254
2286 y(1.) 41 b(Create) 20 b(a) h(datab) n(ase) g(\(e.g.) p
Fk 24 w(publish) p Fp(\)) 254 2452 y(2.) 41 b(Create) 20
b(a) h(user) f(and) f(gi) n(v) o(e) h(him) g(perm) n(issions) h(to) f
(access) h(it) 254 2597 y(3.) 41 b(Create) 15 b(the) g(data) g
(structures) g(for) f(eZ) i(pub) n(lish) g(with) f(\002le) p
Fk 16 w(sql/publish_m) n(ysql.sql) p Fp 15 w(or) p Fk
15 w(sql/publis) n(h_postgresql.) n(sql) p Fp 254 2742
a(4.) 41 b(If) 22 b(you) f(e) o(xtracted) p Fk 21 w(data.tar.g) n(z) p
Fp 23 w(befor) n(e,) i(you) f(should) f(also) i(\002ll) g(the) f
(database) g(with) g(the) g(e) o(xample) f(data) h(in) h(\002le) p
Fk 358 2821 a(sql/data) n(_mysql.sql) p Fn 150 3067 a(3.2.1) n(.3) 82
b(Finishing) 21 b(the) g(install) p Fp 254 3248 a(1.) 41
b(Rename) p Fk 19 w(site.ini) p Fp 20 w(to) p Fk 20 w(site.ini.php) p
Fp 19 w(and) 20 b(edit) g(it.) 254 3414 y(2.) 41 b(T) -6
b(est) 20 b(if) h(you) e(can) h(access) p Fk 21 w(sitedir.ini) p
Fp 19 w(with) g(a) h(WWW) h(bro) n(wser) 358 3513 y(\(e) o(x) n(ample:)
p Fk 25 w(http://www.) n(yourserver.co) n(m/ezpublish/si) n(tedir.ini) p
Fp(\).) 358 3712 y(a\)) e(If) g(you) f(get) h(a) h(\223F) o(orb) n
(idden\224,) e(e) n(v) o(ery) n(thing) h(is) h(goo) n(d) g(and) e
(safe.) 358 3812 y(b\)) k(If) h(you) g(get) g(the) g(\002le,) h(then) f
(your) f(serv) o(er) g(doesn') o(t) g(obe) o(y) p Fk
23 w(.htacces) n(s) p Fp 25 w(\002les.) 38 b(T) m(ry) 23
b(the) h(ne) o(xt) g(install) h(in) f(section) 358 3912
y(3.2) n(.2,) g(it) g(is) g(much) e(safer) h(then.) 34
b(Otherwise) 23 b(you) f(can) i(still) g(use) f(eZ) h(pub) n(lish,) h
(b) n(ut) e(ha) n(v) o(e) g(to) g(remem) n(ber) g(that) h(it) g(is) 358
4011 y(not) 19 b(as) i(safe) g(as) g(it) g(cou) n(ld) g(be.) 254
4177 y(3.) 41 b(Finished!) n(!) 358 4277 y(Go) 27 b(to) p
Fk 28 w(http://www) n(.yourserver.c) n(om/ezpublish/) n(index_admin.ph)
n(p) p Fp(,) j(login) d(as) p Fk 28 w(admin) p Fp 28
w(with) g(passw) o(ord) p Fk 358 4377 a(publish) p Fp
27 w(and) g(chan) n(ge) h(you) n(r) g(passw) o(ord.) 46
b(Then) 27 b(go) g(to) p Fk 28 w(http://) n(www.yourserver) n
(.com/ezpublis) n(h) p Fp(.) 48 b(Ha) n(v) o(e) 358 4476
y(fun) n(.) p Fh 150 4739 a(3.2.2) 99 b(Installing) 20
b(with) h(shell) g(access) g(on) g(ser) o(v) o(er) g(and) g(tw) o(o) g
(separate) h(dir) n(ectories) g(f) n(or) e(eZ) i(pub-) 449
4855 y(lish) p Fp 150 5036 a(If) 28 b(you) f(ha) n(v) o(e) h(shell) g
(access) h(on) f(you) n(r) h(serv) o(e) n(r) g(and) e(you) h(ha) n(v) o
(e) f(the) h(possibility) g(to) g(create) g(director) n(ies) h(which) f
(are) g(not) 150 5135 y(accessible) 15 b(by) g(WWW) i(bro) n(wser) n
(s,) g(you) e(can) g(use) g(the) g(script) p Fk 16 w(ezinsta) n
(ller.sh) p Fp(.) 23 b(It) 16 b(will) g(ask) f(you) f(all) i(rele) n(v)
n(an) n(t) g(questions) 150 5235 y(and) k(install) g(eZ) h(pub) n(lish)
g(in) f(a) h(v) o(ery) e(secure) h(w) o(ay) -5 b(.) p
150 5723 V 1871 5823 a(24) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
